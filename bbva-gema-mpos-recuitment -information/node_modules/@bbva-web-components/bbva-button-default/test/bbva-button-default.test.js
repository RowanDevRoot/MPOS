import { html, fixture, assert, fixtureCleanup } from '@open-wc/testing';

import '../bbva-button-default.js';

suite('bbva-button-default', () => {
  teardown(() => fixtureCleanup());

  suite('using text property', () => {
    let el;

    setup(async () => {
      el = await fixture(
        html`
          <bbva-button-default text="Primary"></bbva-button-default>
        `,
      );
      await el.updateComplete;
    });

    suite('Semantic Dom Diff', () => {
      test('DOM - Structure test', () => {
        assert.dom.equalSnapshot(el, { ignoreAttributes: ['id'] });
      });

      test('Shadow DOM - Structure test', () => {
        assert.shadowDom.equalSnapshot(el);
      });
    });

    suite('<bbva-button-default></bbva-button-default>', () => {
      test('button type is button by default', async () => {
        assert.equal(el.querySelector('button').type, 'button');
      });
    });
  });

  suite('Using content', () => {
    let el;

    setup(async () => {
      el = await fixture(
        html`
          <bbva-button-default>Primary</bbva-button-default>
        `,
      );
      await el.updateComplete;
    });

    suite('Semantic Dom Diff', () => {
      test('DOM - Structure test', () => {
        assert.dom.equalSnapshot(el, { ignoreAttributes: ['id'] });
      });

      test('Shadow DOM - Structure test', () => {
        assert.shadowDom.equalSnapshot(el);
      });
    });

    suite('<bbva-button-default></bbva-button-default>', () => {
      test('button type is button by default', async () => {
        assert.equal(el.querySelector('button').type, 'button');
      });
    });
  });
});
