import { LitElement, html, svg } from 'lit-element';
import { getComponentSharedStyles } from '@cells-components/cells-lit-helpers/cells-lit-helpers.js';
import { ifDefined } from 'lit-html/directives/if-defined.js';
import '@cells-components/cells-icon';
import '@cells-components/cells-image';
import '@bbva-web-components/bbva-clip-entities';
import { CellsI18nMixin as cellsI18nMixin } from '@cells-components/cells-i18n-mixin';
import styles from './bbva-clip-card-styles.js';
import * as logo from './bbva-clip-card-logos.js';
import * as cards from './bbva-clip-card-cards.js';

/**
 * Object defining status parts: icon and text (as a locale key)
 */
export const statusInfo = {
  blocked: {
    icon: 'coronita:block',
    text: 'bbva-clip-card-status-blocked',
  },
  off: {
    icon: 'coronita:on',
    text: 'bbva-clip-card-status-off',
  },
  pending: {
    icon: 'coronita:clock',
    text: 'bbva-clip-card-status-pending',
  },
};

/**
 * Object defining pay compatibility parts: logo from logos file and text (as a locale key)
 */
export const payCompatibilityInfo = {
  apple: {
    logo: 'applepay',
    text: 'bbva-clip-card-pay-compatibility-apple',
  },
  google: {
    logo: 'googlepay',
    text: 'bbva-clip-card-pay-compatibility-google',
  },
};

/**
A credit card clip is used to represent a cards within an application. It is composed of a card background, a logo and card type logo, and can show a status overlay or a pay compatibility overlay. It also can be used for partner cards, showing the entity logo or a text for them.

Card background will depend on the variant property. Text content of the element will be used as accessible text for the card. Background are defined as SVGs in 'bbva-clip-card-cards.js', and logos are SVGs imported from 'bbva-clip-card-logos'.

**Sizes**
```html
<bbva-clip-card size="small">Card</bbva-clip-card>
<bbva-clip-card size="medium">Card</bbva-clip-card>
<bbva-clip-card size="large">Card</bbva-clip-card>
```

**Variants**
```html
<bbva-clip-card variant="debit">Debit Card</bbva-clip-card>
<bbva-clip-card variant="credit">Credit Card</bbva-clip-card>
<bbva-clip-card variant="prepay">Prepay Card</bbva-clip-card>
<bbva-clip-card variant="camino">Camino Card</bbva-clip-card>
<bbva-clip-card variant="gold">Gold Card</bbva-clip-card>
```

**Card types**
```html
<bbva-clip-card card-type="visa">Card</bbva-clip-card>
<bbva-clip-card card-type="mastercard">Card</bbva-clip-card>
```

**Partner cards**
```html
<bbva-clip-card partner>Bank Title</bbva-clip-card>
<bbva-clip-card partner-logo="bankia">Bankia</bbva-clip-card>
```

**Status**
```html
<bbva-clip-card status="blocked">Card</bbva-clip-card>
<bbva-clip-card status="pending">Card</bbva-clip-card>
<bbva-clip-card status="off">Card</bbva-clip-card>
```

**Pay compatibility**
```html
<bbva-clip-card pay-compatibility="apple">Card</bbva-clip-card>
<bbva-clip-card pay-compatibility="google">Card</bbva-clip-card>
```

## Icons

Since this component uses icons, it will need an [iconset](https://platform.bbva.com/en-us/developers/engines/cells/documentation/cells-architecture/components/components-in-depth/icons) in your project as an application level dependency. In fact, this component uses an iconset in its demo.

## Styling

The following custom properties are available for styling:

### Custom properties

| Selector                  | CSS Property               | CSS Variable                             | Theme Variable                        | Foundations/Fallback                                            |
| ------------------------- | -------------------------- | ---------------------------------------- | ------------------------------------- | --------------------------------------------------------------- |
| .overlay-icon             | color                      | --_status-icon-color                     |                                       |                                                                 |
| .pay .overlay-bg          | background-color           | --_pay-compatibility-color               |                                       |                                                                 |
| .overlay-bg               | background-color           | --_status-color                          |                                       |                                                                 |
| .partner-bg               | background-color           | --_partner-overlay-color                 |                                       |                                                                 |
| .partner                  | background-color           | --_partner-bg-color                      |                                       |                                                                 |
| .main.dark                | color                      | --_main-logo-dark-color                  |                                       |                                                                 |
| .main                     | color                      | --_main-logo-color                       |                                       |                                                                 |
| :host([size='small'])     | font-size                  |                                          | --typographyType4XSmall               | foundations.typography.type4XSmall                |
| :host([size='medium'])    | font-size                  |                                          | --typographyType4XSmall               | foundations.typography.type4XSmall                |
| :host([size='medium'])    | line-height                |                                          | --lineHeightType4XSmall               | foundations.lineHeight.type4XSmall                |
| :host([status='pending']) | --_status-color            | --bbva-clip-card-status-pending-color    | --colorsPrimaryCore                   | foundations.colors.primaryCore                    |
| :host([status='off'])     | --_status-color            | --bbva-clip-card-status-off-color        | --colorsSecondary500                  | foundations.colors.secondary500                   |
| :host([status='blocked']) | --_status-color            | --bbva-clip-card-status-blocked-color    | --colorsTertiaryType1Dark             | foundations.colors.tertiaryType1Dark              |
| :host                     | --_text-color              | --bbva-clip-card-text-color              | --colorsSecondary500                  | foundations.colors.secondary500                   |
| :host                     | --_status-color            | --bbva-clip-card-status-color            | --colorsTertiaryType1Dark             | foundations.colors.tertiaryType1Dark              |
| :host                     | --_status-icon-color       | --bbva-clip-card-status-icon-color       | --colorsPrimaryCoreLightened          | foundations.colors.primaryCoreLightened           |
| :host                     | --_pay-compatibility-color | --bbva-clip-card-pay-compatibility-color | --colorsPrimaryCoreLightened          | foundations.colors.primaryCoreLightened           |
| :host                     | --_main-logo-color         | --bbva-clip-card-main-logo-color         | --colorsPrimaryCore                   | foundations.colors.primaryCore                    |
| :host                     | --_main-logo-dark-color    | --bbva-clip-card-main-logo-dark-color    | --colorsPrimaryCoreLightened          | foundations.colors.primaryCoreLightened           |
| :host                     | --_partner-bg-color        | --bbva-clip-card-partner-bg-color        | --colorsSecondary100                  | foundations.colors.secondary100                   |
| :host                     | --_partner-overlay-color   | --bbva-clip-card-partner-overlay-color   | --colorsSecondary500                  | foundations.colors.secondary500                   |
| :host                     | border-radius              |                                          | --borderRadiusMedium                  | foundations.borderRadius.medium                   |
| :host                     | font-size                  |                                          | --typographyType3XSmall               | foundations.typography.type3XSmall                |
| :host                     | line-height                |                                          | --lineHeightType3XSmall               | foundations.lineHeight.type3XSmall                |
| :host                     | font-weight                |                                          | --fontFacePrimaryBookItalicFontWeight | foundations.fontFacePrimary.bookItalic.fontWeight |
| :host                     | font-style                 |                                          | --fontFacePrimaryBookItalicFontStyle  | foundations.fontFacePrimary.bookItalic.fontStyle  |
| :host                     | color                      | --_text-color                            |                                       |                                                                 |
> Styling documentation generated by Cells CLI

@customElement bbva-clip-card
@polymer
@LitElement
@demo demo/index.html
@appliesMixin CellsI18nMixin
*/
export class BbvaClipCard extends cellsI18nMixin(LitElement) {
  static get is() {
    return 'bbva-clip-card';
  }

  static get properties() {
    return {
      /**
       * Size of the card.
       * Allowed sizes are 'large' (default), 'medium' and 'small'
       */
      size: {
        type: String,
        reflect: true,
      },
      /**
       * Status overlay to show.
       * Allowed status are 'blocked', 'off' and 'pending'
       */
      status: {
        type: String,
        reflect: true,
      },
      /**
       * Pay compatibility overlay to show.
       * Allowed types are 'apple' and 'google'
       */
      payCompatibility: {
        type: String,
        attribute: 'pay-compatibility',
      },
      /**
       * Card variant to use as background.
       * Allowed variants are 'default' (default), 'debit', 'credit', 'prepay', 'camino' and 'gold'
       */
      variant: {
        type: String,
      },
      /**
       * Main logo to show, from bbva-clip-card-logos
       * Allowed logo is 'bbva' (default)
       */
      logo: {
        type: String,
      },
      /**
       * Card type logo to use, from bbva-clip-card-logos
       * Allowed current types are 'visa' (default) and 'mastercard'
       */
      cardType: {
        type: String,
        attribute: 'card-type',
      },
      /**
       * Property to set a card image
       * @type {string}
       */
      cardImage: {
        type: String,
        attribute: 'card-image',
      },
      /**
       * Property to set an accessibility text to image
       * @type {string}
       */
      accessibilityText: {
        type: String,
        attribute: 'accessibility-text',
      },
      /**
       * Partner entity to show as partner card
       */
      partnerLogo: {
        type: String,
        attribute: 'partner-logo',
      },
      /**
       * Variant applied to partner logo
       */
      partnerLogoVariant: {
        type: String,
        attribute: 'partner-logo-variant',
      },
      /**
       * If true, partner state will be used and slot text will be shown
       */
      partner: {
        type: Boolean,
      },
      /**
       * Size for status icon
       */
      statusIconSize: {
        type: Number,
        attribute: 'status-icon-size',
      },
    };
  }

  constructor() {
    super();
    this.size = 'large';
    this.cardAlt = '';
    this.status = '';
    this.payCompatibility = '';
    this.variant = 'default';
    this.logo = 'bbva';
    this.cardType = 'visa';
    this.statusInfo = statusInfo;
    this.payCompatibilityInfo = payCompatibilityInfo;
    this.statusIconSize = 24;
    this.accessibilityText = '';
  }

  static get styles() {
    return [styles, getComponentSharedStyles('bbva-clip-card-shared-styles')];
  }

  render() {
    return html`
      ${!this.partner
        ? html`
            <span class="sr-only">
              <slot></slot>
              ${this._accessibleStatus}
            </span>
          `
        : ''}
      ${this.partner || this.partnerLogo ? this.partnerCard : this.card}
      ${this.payCompatibility && !this.status ? this.payCompatibilityOverlay : ''}
      ${this.status ? this.statusOverlay : ''}
    `;
  }

  /**
   * HTML for partner card
   * @return {TemplateResult} HTML of partner card
   */
  get partnerCard() {
    return html`
      <div class="partner">
        <div class="partner-bg" aria-hidden="true"></div>
        ${this.partnerLogo
          ? html`
              <bbva-clip-entities
                class="partner-logo"
                size="small"
                entity="${this.partnerLogo}"
                variant="${ifDefined(this.partnerLogoVariant)}"
              ></bbva-clip-entities>
            `
          : html`
              <span class="partner-text">
                <slot></slot>
                <span class="sr-only">
                  ${this._accessibleStatus}
                </span>
              </span>
            `}
      </div>
    `;
  }

  get _accessibleStatus() {
    return html`
      ${this.status ? `(${this.t(this.statusInfo[this.status].text)})` : ''}
      ${this.payCompatibility
        ? `(${this.t(this.payCompatibilityInfo[this.payCompatibility].text)})`
        : ''}
    `;
  }

  /**
   * HTML for card image and logos
   * @return {TemplateResult} HTML of card image and logos
   */
  get card() {
    return this.cardImage
      ? html`
          <img
            src="${this.cardImage}"
            id="cardImage"
            class="image-card"
            alt="${this.accessibilityText}"
          />
        `
      : html`
          <div aria-hidden="true">
            ${this._cardAsset}
            <span class="main ${this.variant !== 'default' ? 'dark' : ''}">${this.mainLogo}</span>
            <span class="type">${this.typeLogo}</span>
          </div>
        `;
  }

  get _cardAsset() {
    return html`
      <span class="bg">
        ${svg`${cards[`${this.variant}Card`]}`}
      </span>
    `;
  }

  /**
   * SVG for card main logo
   * @return {TemplateResult} SVG for card main logo
   */
  get mainLogo() {
    return svg`${logo[this.logo]}`;
  }

  /**
   * SVG for card type logo
   * @return {TemplateResult} SVG for card type logo
   */
  get typeLogo() {
    return svg`${logo[this.cardType]}`;
  }

  /**
   * HTML for the status block
   * @return {TemplateResult} HTML of status block
   */
  get statusOverlay() {
    return html`
      <div class="overlay status" aria-hidden="true">
        <div class="overlay-bg"></div>
        <cells-icon
          class="overlay-icon"
          icon="${this.statusInfo[this.status].icon}"
          size="${this.statusIconSize}"
        ></cells-icon>
      </div>
    `;
  }

  /**
   * HTML for the pay compatibility block
   * @return {TemplateResult} HTML of pay compatibility block
   */
  get payCompatibilityOverlay() {
    return html`
      <div class="overlay pay" aria-hidden="true">
        <div class="overlay-bg"></div>
        <span class="overlay-icon"
          >${svg`${logo[this.payCompatibilityInfo[this.payCompatibility].logo]}`}</span
        >
      </div>
    `;
  }
}

customElements.define(BbvaClipCard.is, BbvaClipCard);
