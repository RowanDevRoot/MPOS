import { html } from 'lit-element';
import { getComponentSharedStyles } from '@cells-components/cells-lit-helpers';
import { CellsButton } from '@cells-components/cells-button/cells-button.js';
import { ifDefined } from 'lit-html/directives/if-defined.js';
import '@cells-components/cells-icon';

import styles from './bbva-link-styles.js';

/**
A link helps a user navigate to subpages within an application. It can include an icon and text elements.
Links are used primarily as a navigational element, to embed actions or pathways, or to view additional information.
They are used to reduce visual complexity of a design. With links, users can navigate to other pages,
windows, help information, start a command, and more.
Example:

```html
Button link
<bbva-link>Active</bbva-link>

Disabled button link
<bbva-link disabled>Active</bbva-link>

Anchor Link
<bbva-link href="https://www.bbva.com" target="_blank"></bbva-link>

## Styling

The following custom properties are available for styling:

### Custom properties

| Selector               | CSS Property | CSS Variable                 | Theme Variable                    | Foundations/Fallback                                        |
| ---------------------- | ------------ | ---------------------------- | --------------------------------- | ----------------------------------------------------------- |
| .icon                  | margin-right | --gridSpacerVariant          | --gridSpacer                      | foundations.grid.spacer                       |
| :host([active])        | color        | --bbva-link-active-color     | --colorsPrimaryCoreDark           | foundations.colors.primaryCoreDark            |
| :host([focus-visible]) | color        | --bbva-link-active-color     | --colorsPrimaryCoreDark           | foundations.colors.primaryCoreDark            |
| :host([disabled])      | opacity      | --bbva-link-disabled-opacity |                                   | 0.4                                                         |
| :host([disabled])      | color        | --bbva-link-disabled-color   | --colorsSecondary400              | foundations.colors.secondary400               |
| :host                  | color        | --bbva-link-color            | --colorsPrimaryMedium             | foundations.colors.primaryMedium              |
| :host                  | font-weight  | --bbva-link-font-weight      | --fontFacePrimaryMediumFontWeight | foundations.fontFacePrimary.medium.fontWeight |
| :host                  | font-style   | --bbva-link-font-style       | --fontFacePrimaryMediumFontStyle  | foundations.fontFacePrimary.medium.fontStyle  |
| :host                  | font-size    | --bbva-link-font-size        | --typographyTypeSmall             | foundations.typography.typeSmall              |
| :host                  | line-height  | --bbva-link-line-height      | --lineHeightTypeSmall             | foundations.lineHeight.typeSmall              |
> Styling documentation generated by Cells CLI

@customElement bbva-link
@polymer
@LitElement
@demo demo/index.html
*/
export class BbvaLink extends CellsButton {
  static get is() {
    return 'bbva-link';
  }

  static get properties() {
    return {
      /**
       * Mark link as disabled
       */
      disabled: {
        type: Boolean,
        reflect: true,
      },
      /**
       * Icon to be shown
       */
      icon: {
        type: String,
      },
      /**
       * Icon size
       * @default 16
       */
      iconSize: {
        type: Number,
        attribute: 'icon-size',
      },
      /**
       * Href of the hidden link
       */
      href: {
        type: String,
      },
      /**
       * target of the hidden link
       */
      target: {
        type: String,
      },
      /**
       * Download attribute for link
       */
      download: {
        type: String,
      },
      /**
       * Hreflang attribute for link
       */
      hreflang: {
        type: String,
      },
      /**
       * rel attribute for link
       */
      rel: {
        type: String,
      },
      /**
       * referrerpolicy attribute for link
       */
      referrerpolicy: {
        type: String,
      },
    };
  }

  constructor() {
    super();
    this.iconSize = 16;
  }

  connectedCallback() {
    if (super.connectedCallback) {
      super.connectedCallback();
    }
    if (this.href) {
      this.setAttribute('role', 'link');
    }
  }

  static get styles() {
    return [super.styles, styles, getComponentSharedStyles('bbva-link-shared-styles')];
  }

  get _iconTemplate() {
    return this.icon
      ? html`
          <cells-icon class="icon" .icon="${this.icon}" .size="${this.iconSize}"></cells-icon>
        `
      : html``;
  }

  get _button() {
    return this.href
      ? html`
          <a
            href="${this.href}"
            hreflang="${ifDefined(this.hreflang)}"
            target="${ifDefined(this.target)}"
            download="${ifDefined(this.download)}"
            referrerpolicy="${ifDefined(this.referrerpolicy)}"
            rel="${ifDefined(this.rel)}"
            style="display: none;"
            id="${this._formElementId}"
            aria-hidden="true"
            tabindex="-1"
          >
          </a>
        `
      : super._button;
  }

  render() {
    return html`
      ${this._iconTemplate}
      <slot></slot>
      ${this._button}
    `;
  }
}

customElements.define(BbvaLink.is, BbvaLink);
