{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<bbva-amount>` is a component formatting an amount and its currency code into different combinations of sizes.\n\nIf amount is a negative value, `negative` attribute is added, which can be used to provide a visual clue.\n\nAmount can be abbreviated if a scale is indicated. E.g.: 1.240.000 can be abbreviated as 1.24M if scale 6 is set and matches an abbreviation in abbreviations property.\n\nExample:\n\n```html\n<bbva-amount amount=\"6423525.45\" currency-code=\"EUR\" local-currency=\"USD\" language=\"en\">\n</bbva-amount>\n```\n\n ## Styling\n\nThe following custom properties are available for styling:\n\n### Custom properties\n\n| Selector                         | CSS Property | CSS Variable                           | Theme Variable                  | Foundations/Fallback                                      |\n| -------------------------------- | ------------ | -------------------------------------- | ------------------------------- | --------------------------------------------------------- |\n| :host([variant='5xl']) .currency | font-size    | --bbva-amount-5xl-currency-font-size   |                                 | 1.75rem                                                   |\n| :host([variant='5xl']) .currency | line-height  | --bbva-amount-5xl-currency-line-height |                                 | 2rem                                                      |\n| :host([variant='5xl'])           | font-size    | --bbva-amount-5xl-font-size            |                                 | 3rem                                                      |\n| :host([variant='5xl'])           | line-height  | --bbva-amount-5xl-line-height          |                                 | 3rem                                                      |\n| :host([variant='4xl']) .currency | font-size    | --bbva-amount-4xl-currency-font-size   | --typographyTypeXLarge          | foundations.typography.typeXLarge           |\n| :host([variant='4xl']) .currency | line-height  | --bbva-amount-4xl-currency-line-height | --lineHeightTypeXLarge          | foundations.lineHeight.typeXLarge           |\n| :host([variant='4xl'])           | font-size    | --bbva-amount-4xl-font-size            |                                 | 2rem                                                      |\n| :host([variant='4xl'])           | line-height  | --bbva-amount-4xl-line-height          |                                 | 2rem                                                      |\n| :host([variant='3xl']) .currency | font-size    | --bbva-amount-3xl-currency-font-size   | --typographyType3XSmall         | foundations.typography.type3XSmall          |\n| :host([variant='3xl']) .currency | line-height  | --bbva-amount-3xl-currency-line-height | --lineHeightType3XSmall         | foundations.lineHeight.type3XSmall          |\n| :host([variant='3xl'])           | font-size    | --bbva-amount-3xl-font-size            | --typographyType3XLarge         | foundations.typography.type3XLarge          |\n| :host([variant='3xl'])           | line-height  | --bbva-amount-3xl-line-height          | --lineHeightType3XLarge         | foundations.lineHeight.type3XLarge          |\n| :host([variant='xl']) .currency  | font-size    | --bbva-amount-xl-currency-font-size    | --typographyType3XSmall         | foundations.typography.type3XSmall          |\n| :host([variant='xl']) .currency  | line-height  | --bbva-amount-xl-currency-line-height  | --lineHeightType3XSmall         | foundations.lineHeight.type3XSmall          |\n| :host([variant='xl'])            | font-size    | --bbva-amount-xl-font-size             | --typographyTypeXLarge          | foundations.typography.typeXLarge           |\n| :host([variant='xl'])            | line-height  | --bbva-amount-xl-line-height           | --lineHeightTypeXLarge          | foundations.lineHeight.typeXLarge           |\n| :host([variant='l']) .currency   | font-size    | --bbva-amount-l-currency-font-size     | --typographyType3XSmall         | foundations.typography.type3XSmall          |\n| :host([variant='l']) .currency   | line-height  | --bbva-amount-l-currency-line-height   | --lineHeightType3XSmall         | foundations.lineHeight.type3XSmall          |\n| :host([variant='l'])             | font-size    | --bbva-amount-l-font-size              | --typographyTypeLarge           | foundations.typography.typeLarge            |\n| :host([variant='l'])             | line-height  | --bbva-amount-l-line-height            | --lineHeightTypeLarge           | foundations.lineHeight.typeLarge            |\n| .currency                        | float        | --bbva-amount-currency-float           |                                 | none                                                      |\n| .minus-right                     | float        | --bbva-amount-minus-right-float        |                                 | none                                                      |\n| .minus-left                      | float        | --bbva-amount-minus-left-float         |                                 | none                                                      |\n| :host                            | font-weight  | --bbva-amount-font-weight              | --fontFacePrimaryBookFontWeight | foundations.fontFacePrimary.book.fontWeight |\n> Styling documentation generated by Cells CLI",
      "summary": "",
      "path": "bbva-amount.js",
      "properties": [
        {
          "name": "scale",
          "type": "Number",
          "description": "Alias for abbr property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 2
            },
            "end": {
              "line": 179,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_isValidAmount",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 2
            },
            "end": {
              "line": 191,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "hasError",
          "type": "Boolean",
          "description": "Returns error state of amount",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 2
            },
            "end": {
              "line": 199,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "absAbbrAmount",
          "type": "Number",
          "description": "Return amount to absolute counting with abbreviation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_fraccionalOverFlow",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 2
            },
            "end": {
              "line": 226,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_integer",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 2
            },
            "end": {
              "line": 234,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_groupChar",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_separator",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_fractional",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 2
            },
            "end": {
              "line": 256,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_currency",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 260,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_alignRight",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 2
            },
            "end": {
              "line": 264,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_minusAfterSymbol",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_decimalsHidden",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 2
            },
            "end": {
              "line": 281,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_abbreviation",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 2
            },
            "end": {
              "line": 286,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_safeAbbrValue",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 2
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "srAmount",
          "type": "String",
          "description": "Accessible amount",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 2
            },
            "end": {
              "line": 324,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "abbr",
          "type": "number | null | undefined",
          "description": "Abbr used to display the given amount.\nAllowed values are 1, 2, 3, 6 and 9.\nValues got from (http://www.statman.info/conversions/number_scales.html)\nNote: 9 is abbreviated as 'B' (Billions) instead of 'G'.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "abbreviations",
          "type": "Object | null | undefined",
          "description": "Chars used as abbreviature depending on the applied scale. Values got from (http://www.statman.info/conversions/number_scales.html)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "decimalDigits",
          "type": "number | null | undefined",
          "description": "Number of decimals",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "decimalsHidden",
          "type": "boolean | null | undefined",
          "description": "If true, decimal part of the amount will be hidden regardless of its value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "zeroDecimalsHidden",
          "type": "boolean | null | undefined",
          "description": "If true, decimal part of the amount will be hidden if is zero.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "trailingZeroDecimalsHidden",
          "type": "boolean | null | undefined",
          "description": "If true, decimal part of the amount will be hidden if there is a trailing zero.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "showCurrencyCode",
          "type": "boolean | null | undefined",
          "description": "If true, amount will show currency code instead of currency symbol",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 2
            },
            "end": {
              "line": 163,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleBooleanAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attr"
            },
            {
              "name": "condition"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 2
            },
            "end": {
              "line": 379,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 59,
          "column": 7
        },
        "end": {
          "line": 380,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "BbvaAmount",
      "attributes": [
        {
          "name": "abbr",
          "description": "Abbr used to display the given amount.\nAllowed values are 1, 2, 3, 6 and 9.\nValues got from (http://www.statman.info/conversions/number_scales.html)\nNote: 9 is abbreviated as 'B' (Billions) instead of 'G'.",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "abbreviations",
          "description": "Chars used as abbreviature depending on the applied scale. Values got from (http://www.statman.info/conversions/number_scales.html)",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "decimal-digits",
          "description": "Number of decimals",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "decimals-hidden",
          "description": "If true, decimal part of the amount will be hidden regardless of its value.",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "zero-decimals-hidden",
          "description": "If true, decimal part of the amount will be hidden if is zero.",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "trailing-zero-decimals-hidden",
          "description": "If true, decimal part of the amount will be hidden if there is a trailing zero.",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-currency-code",
          "description": "If true, amount will show currency code instead of currency symbol",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "bbva-amount",
      "mixins": [
        "CellsAmountMixin"
      ]
    }
  ]
}
