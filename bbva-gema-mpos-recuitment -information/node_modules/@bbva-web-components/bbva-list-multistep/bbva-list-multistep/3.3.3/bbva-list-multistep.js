import { LitElement, html } from 'lit-element';
import { getComponentSharedStyles } from '@cells-components/cells-lit-helpers/cells-lit-helpers.js';
import { ifDefined } from 'lit-html/directives/if-defined';
import '@bbva-web-components/bbva-amount';
import '@bbva-web-components/bbva-clip-box';
import '@bbva-web-components/bbva-clip-card';
import '@bbva-web-components/bbva-clip-product';
import { CellsAmountMixin as cellsAmountMixin } from '@cells-components/cells-amount-mixin';
import styles from './bbva-list-multistep-styles.js';

const LAYOUT = {
  AMOUNT: 'amount',
  CARD: 'card',
  CONTACT: 'contact',
  DEFAULT: 'default',
  DESCRIPTION: 'description',
};
/**
A multistep list is used specifically for multistep processes. These lists should always live in the multistep expandable and utilize the multistep header to separate sections.

Examples:

Default

```html
<bbva-list-multistep name="Account name" amount="9999999.99">
  <span slot="description">Saldo disponible</span>
  <span slot="number">&middot;3236</span>
</bbva-list-multistep>
```

Default Maximum

```html
<bbva-list-multistep name="Account name" variant="maximum" amount="9999999.99">
  <span slot="description">Saldo disponible</span>
  <span slot="number">&middot;3236</span>
</bbva-list-multistep>
```

Description

```html
<bbva-list-multistep layout="description">
  <span slot="description">Lorem ipsum dolor sit amet</span>
</bbva-list-multistep>
```

Affiliate

```html
<bbva-list-multistep name="Account name" amount="9999999.99">
  <span slot="details">Expenses and commissions: 0.75â‚¬</span>
  <span slot="number">
    &middot;3236
    <bbva-clip-box bg-color="#fff" icon="coronita:fold"> </bbva-clip-box>
  </span>
</bbva-list-multistep>
```

Amount

```html
<bbva-list-multistep layout="amount" amount="9999999.99">
  <span slot="description">$ 320,00 (Dolar USA)</span>
</bbva-list-multistep>
```

Amount Maximum

```html
<bbva-list-multistep layout="amount" amount="9999999999999.99" amount-size="l">
  <span slot="description">$ 320,00 (Dolar USA)</span>
</bbva-list-multistep>
```

Description

```html
<bbva-list-multistep layout="description">
  <span slot="description">Lorem ipsum dolor sit amet</span>
</bbva-list-multistep>
```

Contact

```html
<bbva-list-multistep layout="contact" name="John Smith" initials="JS">
  <span slot="details">NTSBDEB1XXX</span>
  <span slot="number">ES12 3456 7890 1234 4567 8901</span>
</bbva-list-multistep>
```

Card

```html
<bbva-list-multistep layout="card" name="Card name" amount="9999999.99">
  <span slot="description">Saldo disponible</span>
  <span slot="number">&middot;3236</span>
</bbva-list-multistep>
```

Card Maximum

```html
<bbva-list-multistep layout="card" name="Card name" amount="9999999999999.99" variant="maximum">
  <span slot="description">Saldo disponible</span>
  <span slot="number">&middot;3236</span>
</bbva-list-multistep>
```

Card Voucher

```html
<bbva-list-multistep layout="card" name="Card name" amount="9999999.99" show-voucher-icon>
  <span slot="description">Saldo disponible</span>
  <span slot="number">&middot;3236</span>
</bbva-list-multistep>
```

Card Voucher Maximum

```html
<bbva-list-multistep
  layout="card"
  name="Card name"
  amount="9999999999999.99"
  variant="maximum"
  show-voucher-icon
>
  <span slot="description">Saldo disponible</span>
  <span slot="number">&middot;1234</span>
</bbva-list-multistep>
```

## Styling

The following custom properties are available for styling:

### Custom properties

| Selector                                 | CSS Property | CSS Variable                                | Theme Variable                        | Foundations/Fallback                                            |
| ---------------------------------------- | ------------ | ------------------------------------------- | ------------------------------------- | --------------------------------------------------------------- |
| :host([variant='maximum']) .card .clip   | margin       | --gridSpacerVariant                         | --gridSpacer                          | foundations.grid.spacer                           |
| .content ::slotted([slot='number'])      | color        | --bbva-list-multistep-slotted-number-color  | --colorsPrimaryCoreLightened          | foundations.colors.primaryCoreLightened           |
| .amount                                  | color        | --bbva-list-multistep-amount-color          | --colorsPrimaryCoreLightened          | foundations.colors.primaryCoreLightened           |
| .content ::slotted([slot='details'])     | color        | --bbva-list-multistep-slotted-details-color | --colorsPrimaryCoreLightened          | foundations.colors.primaryCoreLightened           |
| .content ::slotted([slot='number'])      | font-style   |                                             | --fontFacePrimaryBookItalicFontStyle  | foundations.fontFacePrimary.bookItalic.fontStyle  |
| .content ::slotted([slot='details'])     | font-style   |                                             | --fontFacePrimaryBookItalicFontStyle  | foundations.fontFacePrimary.bookItalic.fontStyle  |
| .content ::slotted([slot='number'])      | font-weight  |                                             | --fontFacePrimaryBookItalicFontWeight | foundations.fontFacePrimary.bookItalic.fontWeight |
| .content ::slotted([slot='details'])     | font-weight  |                                             | --fontFacePrimaryBookItalicFontWeight | foundations.fontFacePrimary.bookItalic.fontWeight |
| .name                                    | font-style   |                                             | --fontFacePrimaryMediumFontStyle      | foundations.fontFacePrimary.medium.fontStyle      |
| .name                                    | font-weight  |                                             | --fontFacePrimaryMediumFontWeight     | foundations.fontFacePrimary.medium.fontWeight     |
| .name                                    | color        | --bbva-list-multistep-name-color            | --colorsPrimaryCoreLightened          | foundations.colors.primaryCoreLightened           |
| .card .wrapper-name                      | margin-right | --gridSpacerVariant                         | --gridSpacer                          | foundations.grid.spacer                           |
| .content ::slotted([slot='description']) | font-style   |                                             | --fontFacePrimaryBookFontStyle        | foundations.fontFacePrimary.book.fontStyle        |
| .content ::slotted([slot='description']) | font-weight  |                                             | --fontFacePrimaryBookFontWeight       | foundations.fontFacePrimary.book.fontWeight       |
| .content ::slotted([slot='description']) | color        | --bbva-list-multistep-description-color     | --colorsPrimaryCoreLightened          | foundations.colors.primaryCoreLightened           |
| .name                                    | font-size    |                                             | --typographyTypeSmall                 | foundations.typography.typeSmall                  |
| .content ::slotted([slot='number'])      | font-size    |                                             | --typographyTypeSmall                 | foundations.typography.typeSmall                  |
| .content ::slotted([slot='description']) | font-size    |                                             | --typographyTypeSmall                 | foundations.typography.typeSmall                  |
| .content ::slotted([slot='details'])     | font-size    |                                             | --typographyTypeSmall                 | foundations.typography.typeSmall                  |
| .name                                    | line-height  |                                             | --lineHeightTypeSmall                 | foundations.lineHeight.typeSmall                  |
| .content ::slotted([slot='number'])      | line-height  |                                             | --lineHeightTypeSmall                 | foundations.lineHeight.typeSmall                  |
| .content ::slotted([slot='description']) | line-height  |                                             | --lineHeightTypeSmall                 | foundations.lineHeight.typeSmall                  |
| .content ::slotted([slot='details'])     | line-height  |                                             | --lineHeightTypeSmall                 | foundations.lineHeight.typeSmall                  |
| .card > .column                          | margin-left  | --gridSpacerVariant                         | --gridSpacer                          | foundations.grid.spacer                           |
| .contact > .column                       | margin-left  | --gridSpacerVariant                         | --gridSpacer                          | foundations.grid.spacer                           |
| :host                                    | padding      | --gridSpacerVariant                         | --gridSpacer                          | foundations.grid.spacer                           |
> Styling documentation generated by Cells CLI

* @customElement bbva-list-multistep
* @polymer
* @LitElement
* @demo demo/index.html
* @appliesMixin CellsAmountMixin
*/
export class BbvaListMultistep extends cellsAmountMixin(LitElement) {
  static get is() {
    return 'bbva-list-multistep';
  }

  static get properties() {
    return {
      /**
       * Amount badge size
       * @default 4xl
       */
      amountSize: {
        type: String,
        attribute: 'amount-size',
      },
      /**
       * Contact initials for clip box
       */
      initials: {
        type: String,
      },
      /**
       * Name text
       */
      name: {
        type: String,
      },
      /**
       * Acount number
       */
      number: {
        type: String,
        attribute: 'number',
      },
      /**
       * Layout
       * @default default
       */
      layout: {
        type: String,
      },
      /**
       * If true it shows bbva-clip-product. Otherwise, it shows bbva-clip-card.
       * @default false
       */
      showVoucherIcon: {
        type: Boolean,
        attribute: 'show-voucher-icon',
      },
      /**
       * Variant to use.
       * Allowed variants are 'default' (default) and 'maximum'.
       */

      variant: {
        type: String,
      },
      /**
       * Property to set a card image
       * @type {string}
       */
      cardImage: {
        type: String,
        attribute: 'card-image',
      },
      /**
       * Property to set an accessibility text to image
       * @type {string}
       */
      accessibilityText: {
        type: String,
        attribute: 'accessibility-text',
      },
    };
  }

  constructor() {
    super();
    this.initials = '';
    this.layout = LAYOUT.DEFAULT;
    this.showVoucherIcon = false;
    this.currencyCode = 'EUR';
    this.localCurrency = 'EUR';
  }

  connectedCallback() {
    if (super.connectedCallback) {
      super.connectedCallback();
    }
    if (!this.amountSize) {
      this.setAmountSize(this.variant !== 'maximum' && this.layout === LAYOUT.AMOUNT ? '4xl' : 'l');
    }
  }

  static get styles() {
    return [styles, getComponentSharedStyles('bbva-list-multistep-shared-styles')];
  }

  setAmountSize(variant) {
    this.amountSize = variant;
  }

  get _initials() {
    return this.initials
      ? this.initials
      : this.name
          .split(' ')
          .map(w => w[0])
          .join('')
          .toUpperCase();
  }

  get _renderAmount() {
    return html`
      <div class="column">
        <bbva-amount
          class="amount"
          .amount=${this.amount}
          variant="${this.amountSize}"
          currency-code="${this.currencyCode}"
          local-currency="${this.localCurrency}"
        ></bbva-amount>
        ${BbvaListMultistep._renderDescription()}
      </div>
    `;
  }

  get _renderContact() {
    return html`
      <div class="contact row">
        <bbva-clip-box
          class="clipbox bitone"
          size="medium"
          .text="${this._initials}"
        ></bbva-clip-box>
        <div class="column">
          <span class="name">${this.name}</span>
          <slot name="number"></slot>
          <slot name="details"></slot>
        </div>
      </div>
    `;
  }

  get _cardIcon() {
    return this.showVoucherIcon
      ? html`
          <bbva-clip-product class="clip" item="card" size="large"></bbva-clip-product>
        `
      : html`
          <bbva-clip-card
            class="clip"
            size="small"
            card-image="${ifDefined(this.cardImage)}"
            accessibility-text="${ifDefined(this.accessibilityText)}"
            >Card</bbva-clip-card
          >
        `;
  }

  get _renderCreditCard() {
    return this.variant === 'maximum'
      ? html`
          <div class="card">
            <span class="name">${this.name}</span>
            <div class="row row-small">
              <div class="column">
                ${this._cardIcon}
                <slot name="number"></slot>
              </div>
              <div class="balance">
                ${this._renderAmount}
              </div>
            </div>
          </div>
        `
      : html`
          <div class="card row">
            ${this._cardIcon}
            <div class="column">${this._renderDefault}</div>
          </div>
        `;
  }

  get _renderDefault() {
    return html`
      <div class="details">
        <div class="row">
          <div class="wrapper-name">
            <span class="name">${this.name}</span>
          </div>
          <bbva-amount
            class="amount"
            .amount=${this.amount}
            variant="${this.amountSize}"
            currency-code="${this.currencyCode}"
            local-currency="${this.localCurrency}"
          ></bbva-amount>
        </div>
        <div class="row">
          <slot name="number"></slot>
          ${BbvaListMultistep._renderDescription()}
        </div>
        <div class="row">
          <slot name="details"></slot>
        </div>
      </div>
    `;
  }

  static _renderDescription() {
    return html`
      <slot name="description"></slot>
    `;
  }

  get _renderLayout() {
    let layout = null;

    switch (this.layout) {
      case LAYOUT.AMOUNT:
        layout = this._renderAmount;
        break;
      case LAYOUT.CARD:
        layout = this._renderCreditCard;
        break;
      case LAYOUT.CONTACT:
        layout = this._renderContact;
        break;
      case LAYOUT.DESCRIPTION:
        layout = BbvaListMultistep._renderDescription();
        break;
      default:
        layout = this._renderDefault;
    }
    return layout;
  }

  render() {
    return html`
      <slot></slot>
      <div class="content">
        ${this._renderLayout}
      </div>
    `;
  }
}

customElements.define(BbvaListMultistep.is, BbvaListMultistep);
