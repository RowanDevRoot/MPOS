import { html, fixture, assert, fixtureCleanup } from '@open-wc/testing';

import '../bbva-list-multistep.js';

suite('bbva-list-multistep', () => {
  let el;

  teardown(() => fixtureCleanup());
  suite('bbva-list-multistep - basic', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep name="Account name" amount="9999999.99">
          <span slot="description">Saldo disponible</span>
          <span slot="number">&middot;3236</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });

    test('a11y', () => assert.isAccessible(el));

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });

  suite('bbva-list-multistep - custom size amount', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep name="Account name" amount="9999999.99" amount-size="2xl">
          <span slot="description">Saldo disponible</span>
          <span slot="number">&middot;3236</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });

    test('a11y', () => assert.isAccessible(el));

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });

  suite('bbva-list-multistep - amount', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep layout="amount" amount="9999999.99">
          <span slot="description">$ 320,00 (Dolar USA)</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });

    test('a11y', () => assert.isAccessible(el));

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });

  suite('bbva-list-multistep - description', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep layout="description">
          <span slot="description">Lorem ipsum dolor sit amet</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });
    test('a11y', () => assert.isAccessible(el));

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });

  suite('bbva-list-multistep - contact', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep layout="contact" name="John Smith" initials="JS">
          <span slot="details">NTSBDEB1XXX</span>
          <span slot="number">ES12 3456 7890 1234 4567 8901</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });

  suite('bbva-list-multistep - contact without initials', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep layout="contact" name="John Smith">
          <span slot="details">NTSBDEB1XXX</span>
          <span slot="number">ES12 3456 7890 1234 4567 8901</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });

  suite('bbva-list-multistep - card', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep layout="card" name="Card name" amount="9999999.99">
          <span slot="description">Saldo disponible</span>
          <span slot="number">&middot;3236</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });

    test('a11y', () => assert.isAccessible(el));

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });

  suite('bbva-list-multistep - card maximum', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep layout="card" name="Card name" amount="9999999.99" variant="maximum">
          <span slot="description">Saldo disponible</span>
          <span slot="number">&middot;3236</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });

    test('a11y', () => assert.isAccessible(el));

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });

  suite('bbva-list-multistep - card voucher', () => {
    setup(async () => {
      el = await fixture(html`
        <bbva-list-multistep layout="card" name="Card name" amount="9999999.99" show-voucher-icon>
          <span slot="description">Saldo disponible</span>
          <span slot="number">&middot;3236</span>
        </bbva-list-multistep>
      `);
      await el.updateComplete;
    });

    test('a11y', () => assert.isAccessible(el));

    test('SHADOW DOM - Structure test', () => {
      assert.shadowDom.equalSnapshot(el);
    });

    test('LIGHT DOM - Structure test', () => {
      assert.lightDom.equalSnapshot(el);
    });
  });
});
