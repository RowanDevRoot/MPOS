import { LitElement, html } from 'lit-element';
import { ifDefined } from 'lit-html/directives/if-defined.js';
import { getComponentSharedStyles } from '@cells-components/cells-lit-helpers';
import '@cells-components/cells-icon';
import { CellsI18nMixin as cellsI18nMixin } from '@cells-components/cells-i18n-mixin';
import { CellsFocusVisibleMixin as cellsFocusVisibleMixin } from '@cells-components/cells-focus-visible-mixin';
import { bbvaFoundationsStylesFocus } from '@bbva-web-components/bbva-foundations-styles';
import styles from './bbva-header-main-styles.js';
/**
`<bbva-header-main>` main navigation header. Types:
  * Modal: modal header of operation.
  * Modal third level: modal header that opens under the operational modal.
  * Process: end of process header.
  * Sign: operations sign header.
  * Transparent: Transparent header for login.

Example:

```html
<bbva-header-main
  accessibility-text-icon-left1="Return"
  accessibility-text-icon-left2="Communication"
  accessibility-text-icon-right1="Menu"
  accessibility-text-icon-right2="Help"
  icon-left1="coronita:return-12"
  icon-left2="coronita:communication"
  icon-right1="coronita:menu"
  icon-right2="coronita:help"
  text="Header main"></bbva-header-main>
```

## Icons

Since this component uses icons, it will need an [iconset](https://platform.bbva.com/en-us/developers/engines/cells/documentation/cells-architecture/composing-with-components/cells-icons) in your project as an application level dependency. In fact, this component uses an iconset in its demo.

## Styling

The following custom properties are available for styling:

### Custom properties

| Selector                        | CSS Property                               | CSS Variable                               | Theme Variable                    | Foundations/Fallback                                  |
| ------------------------------- | ------------------------------------------ | ------------------------------------------ | --------------------------------- | ----------------------------------------------------- |
| :host(.sign)                    | --bbva-header-main-bg-color                |                                            | --colorsTertiaryType4Dark         | foundations.colors.tertiaryType4Dark    |
| :host(.process)                 | --bbva-header-main-bg-color                |                                            | --colorsTertiaryType6Dark         | foundations.colors.tertiaryType6Dark    |
| :host(.modal-three-level)       | --bbva-header-main-bg-color                |                                            | --backgroundColorsLight           | foundations.backgroundColors.light      |
| :host(.modal-three-level)       | --bbva-header-main-color                   |                                            | --colorsSecondary600              | foundations.colors.secondary600         |
| :host(.modal)                   | --bbva-header-main-bg-color                |                                            | --backgroundColorsDark            | foundations.backgroundColors.dark       |
| .header-main .icon              | width                                      | --bbva-header-main-min-height              | --gridSpacerVariant, --gridSpacer | foundations.grid.spacer                 |
| .header-main .icon              | min-height                                 | --bbva-header-main-min-height              | --gridSpacerVariant, --gridSpacer | foundations.grid.spacer                 |
| .header-main .text.full-padding | --bbva-header-main-text-padding-horizontal | --gridSpacerVariant                        | --gridSpacer                      | foundations.grid.spacer                 |
| .header-main .text              | top                                        | --bbva-header-main-text-top                | --bbva-header-main-padding-top    | 0                                                     |
| .header-main .text              | height                                     | --bbva-header-main-min-height              | --gridSpacerVariant, --gridSpacer | foundations.grid.spacer                 |
| .header-main .text              | padding                                    | --bbva-header-main-text-padding-horizontal | --gridSpacerVariant, --gridSpacer | foundations.grid.spacer                 |
| .header-main .text              | font-size                                  | --bbva-header-main-text-font-size          | --typographyTypeMedium            | foundations.typography.typeMedium       |
| .header-main .text              | line-height                                | --bbva-header-main-text-line-height        | --gridSpacerVariant, --gridSpacer | foundations.grid.spacer                 |
| .header-main                    | padding-top                                | --bbva-header-main-padding-top             |                                   | 0                                                     |
| .header-main                    | padding-left                               | --gridSpacerVariant                        | --gridSpacer                      | foundations.grid.spacer                 |
| .header-main                    | padding-right                              | --gridSpacerVariant                        | --gridSpacer                      | foundations.grid.spacer                 |
| .header-main                    | min-height                                 | --bbva-header-main-min-height              | --gridSpacerVariant, --gridSpacer | foundations.grid.spacer                 |
| .header-main                    | max-width                                  | --bbva-header-main-max-width               |                                   | 100%                                                  |
| :host                           | background-color                           | --bbva-header-main-bg-color                | --backgroundColorsDark400         | foundations.backgroundColors.dark400    |
| :host                           | color                                      | --bbva-header-main-color                   | --colorsPrimaryCoreLightened      | foundations.colors.primaryCoreLightened |
> Styling documentation generated by Cells CLI


@customElement bbva-header-main
@polymer
@LitElement
@demo demo/index.html
@appliesMixin CellsI18nMixin
*/
class BbvaHeaderMain extends cellsFocusVisibleMixin(cellsI18nMixin(LitElement)) {
  static get is() {
    return 'bbva-header-main';
  }

  static get properties() {
    return {
      /**
       * Accessibility text for aria-label in icon left 1
       */
      accessibilityTextIconLeft1: {
        type: String,
        attribute: 'accessibility-text-icon-left1',
      },
      /**
       * Accessibility text for aria-label in icon left 2
       */
      accessibilityTextIconLeft2: {
        type: String,
        attribute: 'accessibility-text-icon-left2',
      },
      /**
       * Accessibility text for aria-label in icon right 1
       */
      accessibilityTextIconRight1: {
        type: String,
        attribute: 'accessibility-text-icon-right1',
      },
      /**
       * Accessibility text for aria-label in icon right 2
       */
      accessibilityTextIconRight2: {
        type: String,
        attribute: 'accessibility-text-icon-right2',
      },
      /**
       * Icon to be show on the left in 1 position
       */
      iconLeft1: {
        type: String,
        attribute: 'icon-left1',
      },
      /**
       * Icon to be show on the left in 2 position
       */
      iconLeft2: {
        type: String,
        attribute: 'icon-left2',
      },
      /**
       * Icon to be show on the right in 1 position
       */
      iconRight1: {
        type: String,
        attribute: 'icon-right1',
      },
      /**
       * Icon to be show on the right in 2 position
       */
      iconRight2: {
        type: String,
        attribute: 'icon-right2',
      },
      /**
       * Size for all icons
       */
      iconSize: {
        type: Number,
        attribute: 'icon-size',
      },
      /**
       * If has image it's displayed instead of the text
       */
      image: {
        type: String,
      },
      /**
       * If has text it's displayed instead of the image
       */
      text: {
        type: String,
      },
    };
  }

  get _fullPadding() {
    return this.iconLeft2 || this.iconRight2 ? 'full-padding' : '';
  }

  get _hasImage() {
    return this.image ? 'image' : '';
  }

  constructor() {
    super();
    this.iconSize = 20;
  }

  static get styles() {
    return [
      styles,
      getComponentSharedStyles('bbva-header-main-shared-styles'),
      bbvaFoundationsStylesFocus('button:focus'),
    ];
  }

  render() {
    const {
      _fullPadding,
      _hasImage,
      text,
      image,
      accessibilityTextIconLeft1,
      accessibilityTextIconLeft2,
      accessibilityTextIconRight1,
      accessibilityTextIconRight2,
      iconLeft1,
      iconLeft2,
      iconRight1,
      iconRight2,
      iconSize,
    } = this;
    return html`
      <header class="header-main">
        <h1 class="text ${_fullPadding} ${_hasImage}" id="headding">
          <span id="text">${this.t(text)}</span>
          <img src="${ifDefined(image)}" alt="" ?hidden="${!image}" id="image" />
        </h1>

        <div class="header-icons">
          <button
            class="icon"
            aria-label="${ifDefined(accessibilityTextIconLeft1)}"
            ?hidden="${!iconLeft1}"
            @click="${() => this._headerIconClick('left1')}"
            id="btn-left1"
          >
            <cells-icon icon="${ifDefined(iconLeft1)}" size="${iconSize}"></cells-icon>
          </button>
          <button
            class="icon"
            aria-label="${ifDefined(accessibilityTextIconLeft2)}"
            ?hidden="${!iconLeft2}"
            @click="${() => this._headerIconClick('left2')}"
            id="btn-left2"
          >
            <cells-icon icon="${ifDefined(iconLeft2)}" size="${iconSize}"></cells-icon>
          </button>
        </div>

        <div class="header-icons">
          <button
            class="icon"
            aria-label="${ifDefined(accessibilityTextIconRight2)}"
            ?hidden="${!iconRight2}"
            @click="${() => this._headerIconClick('right2')}"
            id="btn-right2"
          >
            <cells-icon icon="${ifDefined(iconRight2)}" size="${iconSize}"></cells-icon>
          </button>

          <button
            class="icon"
            aria-label="${ifDefined(accessibilityTextIconRight1)}"
            ?hidden="${!iconRight1}"
            @click="${() => this._headerIconClick('right1')}"
            id="btn-right1"
          >
            <cells-icon icon="${ifDefined(iconRight1)}" size="${iconSize}"></cells-icon>
          </button>
        </div>
      </header>
    `;
  }

  /**
   * Fired after clicking the icon
   * @event headder-main-icon-[left1]-click, icon-left2-click, icon-right1-click, icon-right2-click]
   */
  _headerIconClick(icon) {
    this.dispatchEvent(
      new CustomEvent(`header-main-icon-${icon}-click`, {
        detail: true,
        bubbles: true,
        composed: true,
      }),
    );
  }
}

customElements.define(BbvaHeaderMain.is, BbvaHeaderMain);
