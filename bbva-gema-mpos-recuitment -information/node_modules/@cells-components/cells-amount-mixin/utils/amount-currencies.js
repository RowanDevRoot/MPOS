/**
 * Variables describing currencies format structure as fractional separator character, thousands grouping character, symbols, or minus position.
 */

/**
 * Separate fractional from integer according to document language.
 *
 * WARNING: uses non-standard lowercase language strings to prevent errors.
 * You should follow ISO-3166-1 and write the region part of your language in uppercase letters
 * (es-MX, es-CL, ...)
 * @type {Object}
 */
export const separators = {
  'ca': ',',
  'ca-es': ',',
  'es': ',',
  'es-us': '.',
  'en': '.',
  'en-us': '.',
  'en-uy': ',',
  'es-mx': '.',
  'es-pe': '.',
  'es-cl': '.',
  'es-uy': ',',
  'es-ar': ',',
  'eu': ',',
  'gl': ',',
  'tr': ',',
};

/**
 * Group hundreds according to document language.
 *
 * WARNING: uses non-standard lowercase language strings to prevent errors.
 * You should follow ISO-3166-1 and write the region part of your language in uppercase letters
 * (es-MX, es-CL, ...)
 * @type {Object}
 */
export const groupChars = {
  'ca': '.',
  'ca-es': '.',
  'es': '.',
  'es-us': ',',
  'en': ',',
  'en-us': ',',
  'en-uy': '.',
  'es-mx': ',',
  'es-pe': ',',
  'es-cl': ',',
  'es-uy': '.',
  'es-ar': '.',
  'es-py': '.',
  'eu': '.',
  'gl': '.',
  'tr': '.',
};

/**
 * Currency symbols organized by localCurrency[currencyCode] with a 'default' key.
 * @type {Object}
 */
export const currenciesMap = {
  CLP: {
    CLP: '$',
  },
  COP: {
    COP: '$',
  },
  MXN: {
    MXN: '$',
  },
  EUR: {
    USD: '$',
  },
  USD: {
    USD: '$',
  },
  PEN: {
    PEN: 'S/',
    USD: 'US$',
  },
  ARS: {
    ARS: '$',
    USD: 'U$S',
    EUR: '€', // Argentinean Indexed Unit (unidad idexada)
  },
  UYU: {
    UYU: '$',
    USD: 'U$S',
    UYI: 'UI', // Uruguayan Indexed Unit (unidad idexada)
  },
  default: {
    AED: 'د.إ',
    AFN: '؋',
    ALL: 'L',
    AMD: '֏',
    ANG: 'NAƒ',
    AOA: 'Kz',
    ARS: '$',
    AUD: 'A$',
    AWG: 'Afl.',
    AZN: '₼',
    BAM: 'KM',
    BBD: 'Bds$',
    BDT: '৳',
    BGN: 'Лв',
    BHD: '.د.ب',
    BIF: 'FBu',
    BMD: 'BD$',
    BND: 'B$',
    BOB: 'Bs',
    BRL: 'R$',
    BSD: 'B$',
    BTN: 'Nu.',
    BWP: 'P',
    BYN: 'Br',
    BZD: 'Bz$',
    CAD: 'C$',
    CDF: 'F',
    CHF: 'Fr.',
    CLF: 'UF', //CL specific, here in case it's needed in another country
    CLP: 'Ch$',
    CNY: 'Yu¥',
    COP: '$',
    CRC: '$',
    CUP: '$',
    CVE: 'Esc.',
    CZK: 'Kč',
    DJF: '₣',
    DKK: 'kr',
    DOP: 'RD$',
    DZD: 'دج',
    EGP: 'LE',
    ETB: 'Br',
    EUR: '€',
    FJD: 'FJ$',
    FKP: 'FK£',
    GBP: '£',
    GEL: '₾',
    GHS: 'GH₵',
    GIP: '£',
    GMD: 'D',
    GNF: 'FG',
    GTQ: 'Q',
    GYD: 'GY$',
    HKD: 'HK$',
    HNL: 'L',
    HRK: 'kn',
    HTG: 'G',
    HUF: 'Ft',
    IDR: 'Rp',
    ILS: '₪',
    INR: '₹',
    IQD: 'ع.د',
    ISK: 'kr.',
    JMD: 'J$',
    JOD: 'JD',
    JPY: '¥',
    KES: 'KSh',
    KGS: 'C',
    KHR: '៛',
    KMF: '₣',
    KRW: '₩',
    KWD: 'د.ك',
    KYD: 'CI$',
    KZT: '₸',
    LAK: '₭',
    LBP: 'ل.ل',
    LKR: 'Rs',
    LRD: 'L$',
    LSL: 'M',
    LTL: 'Lt',
    LYD: 'ل.د',
    MAD: 'درهم',
    MDL: 'L',
    MGA: 'Ar',
    MKD: 'Ден',
    MMK: 'K',
    MNT: '₮',
    MOP: 'MOP$',
    MRU: 'UM',
    MUR: '₨',
    MVR: 'Rf',
    MWK: 'MK',
    MXN: 'Mx$',
    MYR: 'RM',
    MZN: 'MTn',
    NAD: 'N$',
    NGN: '₦',
    NIO: 'C$',
    NOK: 'kr',
    NPR: 'Rs',
    NZD: 'NZ$',
    OMR: 'ر.ع.',
    PAB: 'B/.',
    PEN: 'S/',
    PGK: 'K',
    PHP: '₱',
    PKR: 'Rs',
    PLN: 'zł',
    PYG: 'Gs',
    QAR: 'ر.ق',
    RON: 'L',
    RSD: 'дин',
    RUB: 'руб',
    RWF: 'RF',
    SAR: 'SR',
    SBD: 'SI$',
    SCR: 'SR',
    SEK: 'kr',
    SGD: 'S$',
    SHP: '£',
    SLL: 'Le',
    SOS: 'Sh.So.',
    SRD: 'Sr$',
    SSP: 'SS£',
    STN: 'Db',
    SVC: '₡',
    SZL: 'E',
    THB: '฿',
    TJS: 'TJS',
    TMT: 'ман.',
    TND: 'د.ت',
    TOP: 'T$',
    TRY: 'TL',
    TTD: 'TT$',
    TWD: 'NT$',
    TZS: 'TSh',
    UAH: '₴',
    UGX: 'USh',
    USD: 'US$',
    UYU: '$',
    UZS: 'UZS',
    VEF: 'Bs.',
    VND: '₫',
    VUV: 'VT',
    WST: 'WS$',
    XAF: 'FCFA',
    XCD: 'EC$',
    XOF: 'FCFA',
    XPF: '₣',
    YER: 'ريال',
    ZAR: 'R',
    ZMW: 'K'
  }
};

/**
 * localCurrency determines whether the minus sign of a negative number is rendered before or after the currency symbol (for left-aligned currencyCodes)
 * @type {Array}
 */
export const minusAfterSymbolLocalCurrencies = ['MXN', 'CLP', 'UYU', 'PEN', 'ARS', 'PYG','VEF',];

/**
 * currency determines if decimals part is rendered
 * @type {Array}
 */
export const currenciesWithoutDecimals = ['PYG',];

/**
 * currencyCodes whose symbol is rendered after the amount
 * @type {Array}
 */
export const rightAlignedCurrencies = ['EUR','%',];

/**
 * Default valid abbreviations for formatted amounts
 * @type {Object}
 */
export const abbreviations = {
  1: 'da',
  2: 'h',
  3: 'k',
  6: 'M', // Million
  9: 'B', // Normalized is actually 'G', but this is more understandable
};
