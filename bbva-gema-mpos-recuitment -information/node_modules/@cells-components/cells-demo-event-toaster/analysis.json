{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<cells-demo-event-toaster>` adds an event listener for each event from the `events` Array.\n\nSo every time one of those events is triggered, a `paper-toast` element will open with the event's information.\n\nExample:\n\n```html\n<cells-demo-event-toaster events=\"[[eventsArray]]\"></cells-demo-event-toaster>\n```\n\n## Styling\n\nThe following custom properties and mixins are available for styling:\n\n### Custom Properties\n| Custom Property                            | Selector       | CSS Property | Value   |\n| ------------------------------------------ | -------------- | ------------ | ------- |\n| --cells-demo-event-toaster-highlight-color | .highlight     | color        |  yellow |\n| --cells-demo-event-toaster-vertical-top    | ]) paper-toast | margin-top   |  160px  |\n### @apply\n| Mixins                               | Selector   | Value |\n| ------------------------------------ | ---------- | ----- |\n| --cells-demo-event-toaster           | :host      | {}    |\n| --cells-demo-event-toaster-highlight | .highlight | {}    |",
      "summary": "",
      "path": "cells-demo-event-toaster.js",
      "properties": [
        {
          "name": "events",
          "type": "Array | null | undefined",
          "description": "An array of Strings (names of the events)\n\n```js\n[ 'open-component', 'close-component', 'do-something' ]\n```",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_events",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "duration",
          "type": "number | null | undefined",
          "description": "Duration of the paper-toast.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "4000"
        },
        {
          "name": "_duration",
          "type": "number | null | undefined",
          "description": "Sets toast duration to 0 (infinite) if multiple toast are allowed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "Toast status.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "multiple",
          "type": "boolean | null | undefined",
          "description": "Allow multiple toast to be visible at the same time.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "set the position of toast in vertical align the possible values is top or bottom",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"bottom\""
        },
        {
          "name": "positionTarget",
          "type": "Element | null | undefined",
          "description": "The element that should be used to position the element. If not set, it will default to the parent node.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Element"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_eventsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 126,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "events"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "events"
            }
          ]
        },
        {
          "name": "_computeDuration",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "duration"
            },
            {
              "name": "multiple"
            }
          ]
        },
        {
          "name": "_setToast",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 2
            },
            "end": {
              "line": 152,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openToast",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeToast",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetOpenedState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setOrder",
          "description": "Order items using \"order\" CSS property.\nGive the highest value (events.length) to the last opened toast and decrease\nthe order of other previously opened toasts by 1.\nWe are using flex-direction: column-reverse, so the order value has to be the highest to appear\nat the beginning.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 2
            },
            "end": {
              "line": 199,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setOpenedState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setEventPayload",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 243,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "cellsDemoEventToaster",
      "attributes": [
        {
          "name": "events",
          "description": "An array of Strings (names of the events)\n\n```js\n[ 'open-component', 'close-component', 'do-something' ]\n```",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "duration",
          "description": "Duration of the paper-toast.",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "opened",
          "description": "Toast status.",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "multiple",
          "description": "Allow multiple toast to be visible at the same time.",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "vertical-align",
          "description": "set the position of toast in vertical align the possible values is top or bottom",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the element. If not set, it will default to the parent node.",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Element | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-demo-event-toaster"
    }
  ]
}
