{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<cells-demo-dropdown-menu>` applies Cells Platform styles to [cells-dropdown-menu](https://globaldevtools.bbva.com/bitbucket/projects/CELLSCOMPONENTSCATALOG/repos/cells-dropdown-menu/browse). The component can be considered as a style wrapper.\n\n*Note:** [cells-demos-ui](https://globaldevtools.bbva.com/bitbucket/projects/CELLSCOMPONENTSCATALOG/repos/cells-demos-ui/browse) is included in the component as own dependency (not as devDependency) because the component is meant to be used in _cells-demo-*_ components instead of applications.\n\nExample:\n\n```html\n<cells-demo-dropdown-menu\n  selected=\"{{selected}}\"\n  label=\"Some label\"\n  items='[{\n    \"name\": \"Item one\",\n    \"value\": \"item-one\"\n  }, {\n    \"name\": \"Item two\",\n    \"value\": \"item-two\"\n  }, {\n    \"name\": \"Item three\",\n    \"value\": \"item-three\"\n  }]'>\n</cells-demo-dropdown-menu>\n```\n\n## Styling\n\nThe following custom properties and mixins are available for styling:\n\n### Custom Properties\n| Custom Property                 | Selector                                                                | CSS Property                                   | Value                                                             |\n| ------------------------------- | ----------------------------------------------------------------------- | ---------------------------------------------- | ----------------------------------------------------------------- |\n| --cells-demo-grey-2             | .label                                                                  | color                                          | `No fallback value`                                               |\n| --cells-demo-grey-3             | .dropdown > --cells-dropdown-layer-control-text: unquote(\"              | color                                          | `No fallback value`                                               |\n| --cells-demo-menu-control-green | .dropdown > --cells-dropdown-menu-control-icon-check-checked: unquote(\" | color                                          |  ![#1DFD92](https://placehold.it/15/1DFD92/000000?text=+) #1DFD92 |\n| --cells-demo-grey-4             | .dropdown                                                               | --cells-dropdown-layer-hovered-underline-color | `No fallback value`                                               |\n| --cells-demo-grey-4             | .dropdown                                                               | --cells-dropdown-layer-opened-underline-color  | `No fallback value`                                               |\n| --cells-demo-grey-4             | .dropdown                                                               | --cells-dropdown-layer-hovered-icon-color      | `No fallback value`                                               |\n| --cells-demo-grey-4             | .dropdown                                                               | --cells-dropdown-layer-opened-icon-color       | `No fallback value`                                               |\n| --cells-demo-grey-1             | .dropdown                                                               | --cells-dropdown-menu-value-color              | `No fallback value`                                               |\n### @apply\n| Mixins                              | Selector  | Value |\n| ----------------------------------- | --------- | ----- |\n| --cells-demo-dropdown-menu          | :host     | {}    |\n| --cells-demo-dropdown-menu-label    | .label    | {}    |\n| --cells-demo-dropdown-menu-dropdown | .dropdown | {}    |",
      "summary": "",
      "path": "cells-demo-dropdown-menu.js",
      "properties": [
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "Dropdown items.\n[{\n  name: 'Item label',\n  value: 'some-value'\n}]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Text over dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "selected",
          "type": "number | null | undefined",
          "description": "Selected dropdown index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "iconCheck",
          "type": "string | null | undefined",
          "description": "Icon for the selected dropdown item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "iconOpen",
          "type": "string | null | undefined",
          "description": "Icon for the open / close state.\nThe same icon is used for both states with a CSS transformation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_uniqueID",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 2
            },
            "end": {
              "line": 158,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 159,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "cellsDemoDropdownMenu",
      "attributes": [
        {
          "name": "items",
          "description": "Dropdown items.\n[{\n  name: 'Item label',\n  value: 'some-value'\n}]",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "label",
          "description": "Text over dropdown.",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "selected",
          "description": "Selected dropdown index.",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "icon-check",
          "description": "Icon for the selected dropdown item.",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-open",
          "description": "Icon for the open / close state.\nThe same icon is used for both states with a CSS transformation.",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-demo-dropdown-menu"
    }
  ]
}
