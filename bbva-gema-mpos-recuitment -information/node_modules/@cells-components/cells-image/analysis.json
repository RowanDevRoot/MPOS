{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`cells-image` is an element for displaying an image that provides useful sizing and\npreloading options not found on the standard `<img>` tag.\n\nThe `sizing` option allows the image to be either cropped (`cover`) or\nletterboxed (`contain`) to fill a fixed user-size placed on the element.\n\nThe `preload` option prevents the browser from rendering the image until the\nimage is fully loaded.  In the interim, either the element's CSS `background-color`\ncan be be used as the placeholder, or the `placeholder` property can be\nset to a URL (preferably a data-URI, for instant rendering) for an\nplaceholder image.\n\nThe `fade` option (only valid when `preload` is set) will cause the placeholder\nimage/color to be faded out once the image is rendered.\n\nExamples:\n\n  Basically identical to `<img src=\"...\">` tag:\n\n    <cells-image src=\"http://lorempixel.com/400/400\"></cells-image>\n\n  Will letterbox the image to fit:\n\n    <cells-image style=\"width:400px; height:400px;\" sizing=\"contain\"\n      src=\"http://lorempixel.com/600/400\"></cells-image>\n\n  Will crop the image to fit:\n\n    <cells-image style=\"width:400px; height:400px;\" sizing=\"cover\"\n      src=\"http://lorempixel.com/600/400\"></cells-image>\n\n  Will show light-gray background until the image loads:\n\n    <cells-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></cells-image>\n\n  Will show a base-64 encoded placeholder image until the image loads:\n\n    <cells-image style=\"width:400px; height:400px;\" placeholder=\"data:image/gif;base64,...\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></cells-image>\n\n  Will fade the light-gray background out once the image is loaded:\n\n    <cells-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload fade src=\"http://lorempixel.com/600/400\"></cells-image>\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--cells-image-placeholder` | Mixin applied to #placeholder | `{}`\n`--cells-image-width` | Sets the width of the wrapped image | `auto`\n`--cells-image-height` | Sets the height of the wrapped image | `auto`",
      "summary": "",
      "path": "cells-image.js",
      "properties": [
        {
          "name": "loaded",
          "type": "?",
          "description": "Read-only value that is true when the image is loaded.\n   ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 293,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "loading",
          "type": "?",
          "description": "Read-only value that tracks the loading state of the image when the `preload` option is used.\n   ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 2
            },
            "end": {
              "line": 300,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "error",
          "type": "?",
          "description": "Read-only value that indicates that the last set `src` failed to load.\n   ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 2
            },
            "end": {
              "line": 307,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "src",
          "type": "string | null | undefined",
          "description": "The URL of an image.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "alt",
          "type": "string | null | undefined",
          "description": "A short text alternative for the image.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "crossorigin",
          "type": "string | null | undefined",
          "description": "CORS enabled images support:\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "preventLoad",
          "type": "boolean | null | undefined",
          "description": "When true, the image is prevented from loading and any placeholder is\nshown.  This may be useful when a binding to the src property is known to\nbe invalid, to prevent 404 requests.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "sizing",
          "type": "string | null | undefined",
          "description": "Sets a sizing option for the image.  Valid values are `contain` (full\naspect ratio of the image is contained within the element and\nletterboxed) or `cover` (image is cropped in order to fully cover the\nbounds of the element), or `null` (default: image takes natural size).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "position",
          "type": "string | null | undefined",
          "description": "When a sizing option is used (`cover` or `contain`), this determines\nhow the image is aligned within the element bounds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "preload",
          "type": "boolean | null | undefined",
          "description": "When `true`, any change to the `src` property will cause the\n`placeholder` image to be shown until the new image has loaded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string | null | undefined",
          "description": "This image will be used as a background/placeholder until the src image\nhas loaded.  Use of a data-URI for placeholder is encouraged for instant\nrendering.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "fade",
          "type": "boolean | null | undefined",
          "description": "When `preload` is true, setting `fade` to true will cause the image to\nfade into place.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "width",
          "type": "number | null | undefined",
          "description": "Can be used to set the width of image (e.g. via binding); size may also\nbe set via CSS.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "height",
          "type": "number | null | undefined",
          "description": "Can be used to set the height of image (e.g. via binding); size may also\nbe set via CSS.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_loaded",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_loading",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_error",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 2
            },
            "end": {
              "line": 286,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setLoaded",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setLoading",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 2
            },
            "end": {
              "line": 339,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setError",
          "description": "Fired when error value changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 2
            },
            "end": {
              "line": 355,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_imgOnLoad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 365,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_imgOnError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 2
            },
            "end": {
              "line": 378,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computePlaceholderHidden",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 2
            },
            "end": {
              "line": 382,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computePlaceholderClassName",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 2
            },
            "end": {
              "line": 386,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeImgDivHidden",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 2
            },
            "end": {
              "line": 390,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeImgDivARIAHidden",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 2
            },
            "end": {
              "line": 394,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeImgDivARIALabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 396,
              "column": 2
            },
            "end": {
              "line": 410,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeImgHidden",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 2
            },
            "end": {
              "line": 414,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_widthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 2
            },
            "end": {
              "line": 418,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_heightChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 2
            },
            "end": {
              "line": 422,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_loadStateObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 424,
              "column": 2
            },
            "end": {
              "line": 448,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "src"
            },
            {
              "name": "preventLoad"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_placeholderChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 450,
              "column": 2
            },
            "end": {
              "line": 453,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_transformChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 2
            },
            "end": {
              "line": 467,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resolveSrc",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 469,
              "column": 2
            },
            "end": {
              "line": 482,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "testSrc"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 69,
          "column": 0
        },
        "end": {
          "line": 483,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "CellsImage",
      "attributes": [
        {
          "name": "src",
          "description": "The URL of an image.",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "alt",
          "description": "A short text alternative for the image.",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "crossorigin",
          "description": "CORS enabled images support:\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "prevent-load",
          "description": "When true, the image is prevented from loading and any placeholder is\nshown.  This may be useful when a binding to the src property is known to\nbe invalid, to prevent 404 requests.",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "sizing",
          "description": "Sets a sizing option for the image.  Valid values are `contain` (full\naspect ratio of the image is contained within the element and\nletterboxed) or `cover` (image is cropped in order to fully cover the\nbounds of the element), or `null` (default: image takes natural size).",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "position",
          "description": "When a sizing option is used (`cover` or `contain`), this determines\nhow the image is aligned within the element bounds.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "preload",
          "description": "When `true`, any change to the `src` property will cause the\n`placeholder` image to be shown until the new image has loaded.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "placeholder",
          "description": "This image will be used as a background/placeholder until the src image\nhas loaded.  Use of a data-URI for placeholder is encouraged for instant\nrendering.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "fade",
          "description": "When `preload` is true, setting `fade` to true will cause the image to\nfade into place.",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "width",
          "description": "Can be used to set the width of image (e.g. via binding); size may also\nbe set via CSS.",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "height",
          "description": "Can be used to set the height of image (e.g. via binding); size may also\nbe set via CSS.",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "error-changed",
          "description": "Fired when error value changes",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "loaded-changed",
          "description": "Fired when loaded value changes",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "loading-changed",
          "description": "Fired when loading value changes",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-image"
    }
  ]
}
