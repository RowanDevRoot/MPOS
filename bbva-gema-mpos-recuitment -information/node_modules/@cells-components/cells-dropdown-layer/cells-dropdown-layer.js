import { LitElement, html, } from 'lit-element';
import { getComponentSharedStyles, } from '@cells-components/cells-lit-helpers/cells-lit-helpers.js';
import '@cells-components/cells-icon';
import styles from './cells-dropdown-layer-styles.js';

/**
Component to show a control and an expansible content. Activating the control will show a layer which will be filled with the component contents.

```html
<cells-dropdown-layer label="Lorem ipsum">
  Content...
</cells-dropdown-layer>
```

You can set the label for the control, as well as an optional icon for it. You can use a prefix text for the control, too. You can also set 'disabled' state. The layer can be closed with the Esc key, activating the control again, or clicking/focusing anything outside it.

```html
<cells-dropdown-layer label="Lorem ipsum" prefix="Lorem ipsum: " disabled>
  Content...
</cells-dropdown-layer>
<cells-dropdown-layer label="Lorem ipsum" icon="coronita:creditcard">
  Content...
</cells-dropdown-layer>
```

The layer tends to open from top left to bottom right by default, but it will adjust its opening direction based on its content size and the available space in the viewport. You can use the `safeMargin` property to specify the "safe distance" (in pixels) to keep from the layer to the viewport limits. Opening direction can be specified using the `openingX` and `openingY` attributes. `opening-x` can receive 'left-to-right', 'right-to-left' or 'centered' as values, while `opening-y` can receive 'top-to-bottom' or 'bottom-to-top'.

```html
<cells-dropdown-layer label="Lorem ipsum" opening-x="centered" opening-y="bottom-to-top" safe-margin="24">
  Content...
</cells-dropdown-layer>
```

Layer width and height will adapt to its content, although it won't be smaller than the control width. You can allow the layer to be smaller than the control width setting the `controlAsMinWidthOff` property to true. Also, you can use CSS variables to set min-width, min-height, max-width and max-height for the layer.

```html
<cells-dropdown-layer label="Lorem ipsum" control-as-min-width-off>
  Content...
</cells-dropdown-layer>
```

The component will show an error status when setting its `error` property with an object containing a 'msg' (for example, `{ "msg": "You must select an option"}`).

The following helper classes are provided in the component styles:
- 'small': makes the component control smaller.
- 'dark': changes the component colors to improve contrast for dark backgrounds.
- 'icon-only': leaves just the icon as visible element in the control.

## Icons

Since this component uses icons, it will need an [iconset](https://bbva.cellsjs.com/guides/best-practices/cells-icons.html) in your project as an [application level dependency](https://bbva.cellsjs.com/guides/advanced-guides/application-level-dependencies.html). In fact, this component uses an iconset in its demo.

## Styling

The following custom properties and mixins are available for styling:

### Custom Properties
| Custom Property                                        | Selector                                                     | CSS Property      | Value                                                             |
| ------------------------------------------------------ | ------------------------------------------------------------ | ----------------- | ----------------------------------------------------------------- |
| --cells-dropdown-layer-value-color                     | :host                                                        | --value-color     |  ![#565C67](https://placehold.it/15/565C67/000000?text=+) #565C67 |
| --cells-dropdown-layer-underline-color                 | :host                                                        | --underline-color |  ![#C6C8CF](https://placehold.it/15/C6C8CF/000000?text=+) #C6C8CF |
| --cells-dropdown-layer-icon-color                      | :host                                                        | --icon-color      |  ![#565C67](https://placehold.it/15/565C67/000000?text=+) #565C67 |
| --cells-dropdown-layer-animation-time                  | :host                                                        | --animation-time  |  0.3s                                                             |
| --cells-fontDefault                                    | :host                                                        | font-family       |  sans-serif                                                       |
| --cells-dropdown-layer-dark-value-color                | :host(.dark)                                                 | --value-color     |  ![#D0D1D4](https://placehold.it/15/D0D1D4/000000?text=+) #D0D1D4 |
| --cells-dropdown-layer-dark-underline-color            | :host(.dark)                                                 | --underline-color |  ![#565C67](https://placehold.it/15/565C67/000000?text=+) #565C67 |
| --cells-dropdown-layer-dark-icon-color                 | :host(.dark)                                                 | --icon-color      |  ![#A3A8AD](https://placehold.it/15/A3A8AD/000000?text=+) #A3A8AD |
| --animation-time                                       | .control-text                                                | transition        | `No fallback value`                                               |
| --value-color                                          | .control-text                                                | color             | `No fallback value`                                               |
| --value-color                                          | .control-icon                                                | color             | `No fallback value`                                               |
| --animation-time                                       | .control-icon                                                | transition        | `No fallback value`                                               |
| --animation-time                                       | .line .underline                                             | transition        | `No fallback value`                                               |
| --animation-time                                       | .line .underline                                             | transition        | `No fallback value`                                               |
| --animation-time)                                      | .line .underline                                             | transition        |  -webkit-transform                                                |
| --underline-color                                      | .line .underline::after                                      | background-color  | `No fallback value`                                               |
| --animation-time)                                      | .line .underline::after                                      | transition        |  -webkit-transform                                                |
| --animation-time)                                      | .line .underline::after                                      | transition        |  background-color                                                 |
| --animation-time)                                      | .line .underline::after                                      | transition        | --animation-time)                                                 |
| --animation-time                                       | .line .icons                                                 | transition        | `No fallback value`                                               |
| --animation-time                                       | .line .icons                                                 | transition        | `No fallback value`                                               |
| --animation-time)                                      | .line .icons                                                 | transition        |  -webkit-transform                                                |
| --icon-color                                           | .line .icons .icon                                           | color             | `No fallback value`                                               |
| --animation-time                                       | .line .icons .icon-open                                      | transition        | `No fallback value`                                               |
| --animation-time                                       | .line .icons .icon-open                                      | transition        | `No fallback value`                                               |
| --animation-time)                                      | .line .icons .icon-open                                      | transition        |  -webkit-transform                                                |
| --value-color                                          | .error-text                                                  | color             | `No fallback value`                                               |
| --cells-dropdown-layer-layer-color                     | .layer                                                       | color             |  ![#D0D1D4](https://placehold.it/15/D0D1D4/000000?text=+) #D0D1D4 |
| --animation-time                                       | .layer                                                       | transition        | `No fallback value`                                               |
| --animation-time                                       | .layer                                                       | transition        | `No fallback value`                                               |
| --animation-time)                                      | .layer                                                       | transition        |  -webkit-transform                                                |
| --cells-dropdown-layer-layer-max-width                 | .layer-wrapper                                               | max-width         |  none                                                             |
| --cells-dropdown-layer-layer-min-width                 | .layer-wrapper                                               | min-width         |  0                                                                |
| --cells-dropdown-layer-layer-max-height                | .layer-wrapper                                               | max-height        |  none                                                             |
| --cells-dropdown-layer-layer-min-height                | .layer-wrapper                                               | min-height        |  0                                                                |
| --cells-dropdown-layer-content-bg-color                | .layer-content                                               | background-color  |  ![#343B49](https://placehold.it/15/343B49/000000?text=+) #343B49 |
| --cells-dropdown-layer-hovered-value-color             | :host(:focus-within:not([disabled]):not([opened]))           | --value-color     |  ![#224FBD](https://placehold.it/15/224FBD/000000?text=+) #224FBD |
| --cells-dropdown-layer-hovered-underline-color         | :host(:focus-within:not([disabled]):not([opened]))           | --underline-color |  ![#224FBD](https://placehold.it/15/224FBD/000000?text=+) #224FBD |
| --cells-dropdown-layer-hovered-icon-color              | :host(:focus-within:not([disabled]):not([opened]))           | --icon-color      |  ![#224FBD](https://placehold.it/15/224FBD/000000?text=+) #224FBD |
| --cells-dropdown-layer-dark-hovered-value-color        | :host(.dark:focus-within:not([disabled]):not([opened]))      | --value-color     |  ![#FFF](https://placehold.it/15/FFF/000000?text=+) #FFF          |
| --cells-dropdown-layer-dark-hovered-underline-color    | :host(.dark:focus-within:not([disabled]):not([opened]))      | --underline-color |  ![#FFF](https://placehold.it/15/FFF/000000?text=+) #FFF          |
| --cells-dropdown-layer-dark-hovered-icon-color         | :host(.dark:focus-within:not([disabled]):not([opened]))      | --icon-color      |  ![#FFF](https://placehold.it/15/FFF/000000?text=+) #FFF          |
| --cells-dropdown-layer-opened-value-color              | :host([opened]:not([disabled]))                              | --value-color     |  ![#224FBD](https://placehold.it/15/224FBD/000000?text=+) #224FBD |
| --cells-dropdown-layer-opened-underline-color          | :host([opened]:not([disabled]))                              | --underline-color |  ![#224FBD](https://placehold.it/15/224FBD/000000?text=+) #224FBD |
| --cells-dropdown-layer-opened-icon-color               | :host([opened]:not([disabled]))                              | --icon-color      |  ![#224FBD](https://placehold.it/15/224FBD/000000?text=+) #224FBD |
| --cells-dropdown-layer-dark-opened-value-color         | :host(.dark[opened]:not([disabled]))                         | --value-color     |  ![#FFF](https://placehold.it/15/FFF/000000?text=+) #FFF          |
| --cells-dropdown-layer-dark-opened-underline-color     | :host(.dark[opened]:not([disabled]))                         | --underline-color |  ![#FFF](https://placehold.it/15/FFF/000000?text=+) #FFF          |
| --cells-dropdown-layer-dark-opened-icon-color          | :host(.dark[opened]:not([disabled]))                         | --icon-color      |  ![#FFF](https://placehold.it/15/FFF/000000?text=+) #FFF          |
| --cells-dropdown-layer-disabled-value-color            | :host([disabled])                                            | --value-color     |  ![#A3A8AD](https://placehold.it/15/A3A8AD/000000?text=+) #A3A8AD |
| --cells-dropdown-layer-disabled-underline-color        | :host([disabled])                                            | --underline-color | ![#D0D1D4](https://placehold.it/15/D0D1D4/000000?text=+) #D0D1D4  |
| --cells-dropdown-layer-disabled-icon-color             | :host([disabled])                                            | --icon-color      |  ![#A3A8AD](https://placehold.it/15/A3A8AD/000000?text=+) #A3A8AD |
| --cells-dropdown-layer-dark-disabled-value-color       | :host([disabled]) .line .icons .icon-open                    | --value-color     |  ![#A3A8AD](https://placehold.it/15/A3A8AD/000000?text=+) #A3A8AD |
| --cells-dropdown-layer-dark-disabled-underline-color   | :host([disabled]) .line .icons .icon-open                    | --underline-color |  ![#565C67](https://placehold.it/15/565C67/000000?text=+) #565C67 |
| --cells-dropdown-layer-dark-disabled-icon-color        | :host([disabled]) .line .icons .icon-open                    | --icon-color      |  ![#A3A8AD](https://placehold.it/15/A3A8AD/000000?text=+) #A3A8AD |
| --cells-dropdown-layer-with-error-value-color          | :host(.dark[disabled])                                       | --value-color     |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |
| --cells-dropdown-layer-with-error-underline-color      | :host(.dark[disabled])                                       | --underline-color |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |
| --cells-dropdown-layer-with-error-icon-color           | :host(.dark[disabled])                                       | --icon-color      |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |
| --cells-dropdown-layer-dark-with-error-value-color     | :host([has-error]:not([disabled]):not([opened])) .error-text | --value-color     |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |
| --cells-dropdown-layer-dark-with-error-underline-color | :host([has-error]:not([disabled]):not([opened])) .error-text | --underline-color |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |
| --cells-dropdown-layer-dark-with-error-icon-color      | :host([has-error]:not([disabled]):not([opened])) .error-text | --icon-color      |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |
### @apply
| Mixins                                                        | Selector                                                                  | Value |
| ------------------------------------------------------------- | ------------------------------------------------------------------------- | ----- |
| --cells-dropdown-layer                                        | :host                                                                     | {}    |
| --cells-dropdown-layer-dark                                   | :host(.dark)                                                              | {}    |
| --cells-dropdown-layer-opener                                 | .opener                                                                   | {}    |
| --cells-dropdown-layer-control                                | .control                                                                  | {}    |
| --cells-dropdown-layer-control-text                           | .control-text                                                             | {}    |
| --cells-dropdown-layer-control-prefix                         | .control-prefix                                                           | {}    |
| --cells-dropdown-layer-control-icon                           | .control-icon                                                             | {}    |
| --cells-dropdown-layer-control-icon-icon                      | .control-icon .icon                                                       | {}    |
| --cells-dropdown-layer-line                                   | .line                                                                     | {}    |
| --cells-dropdown-layer-line-underline                         | .line .underline                                                          | {}    |
| --cells-dropdown-layer-line-underline-after                   | .line .underline::after                                                   | {}    |
| --cells-dropdown-layer-line-icons                             | .line .icons                                                              | {}    |
| --cells-dropdown-layer-line-icon                              | .line .icons .icon                                                        | {}    |
| --cells-dropdown-layer-line-icon-open                         | .line .icons .icon-open                                                   | {}    |
| --cells-dropdown-layer-line-icon-disabled                     | .line .icons .icon-disabled                                               | {}    |
| --cells-dropdown-layer-error-text                             | .error-text                                                               | {}    |
| --cells-dropdown-layer-layer                                  | .layer                                                                    | {}    |
| --cells-dropdown-layer-layer-animating                        | :host([animating]) .layer                                                 | {}    |
| --cells-dropdown-layer-wrapper                                | .layer-wrapper                                                            | {}    |
| --cells-dropdown-layer-content                                | .layer-content                                                            | {}    |
| --cells-dropdown-layer-top                                    | .layer.top                                                                | {}    |
| --cells-dropdown-layer-bottom                                 | .layer.bottom                                                             | {}    |
| --cells-dropdown-layer-left                                   | .layer.left                                                               | {}    |
| --cells-dropdown-layer-left-top                               | .layer.left.top                                                           | {}    |
| --cells-dropdown-layer-left-bottom                            | .layer.left.bottom                                                        | {}    |
| --cells-dropdown-layer-right                                  | .layer.right                                                              | {}    |
| --cells-dropdown-layer-right-top                              | .layer.right.top                                                          | {}    |
| --cells-dropdown-layer-right-bottom                           | .layer.right.bottom                                                       | {}    |
| --cells-dropdown-layer-centered                               | .layer.centered                                                           | {}    |
| --cells-dropdown-layer-centered-wrapper                       | .layer.centered .layer-wrapper                                            | {}    |
| --cells-dropdown-layer-centered-top                           | .layer.centered.top                                                       | {}    |
| --cells-dropdown-layer-centered-bottom                        | .layer.centered.bottom                                                    | {}    |
| --cells-dropdown-layer-hovered                                | :host(:focus-within:not([disabled]):not([opened]))                        | {}    |
| --cells-dropdown-layer-hovered-line-underline-after           | :host(:focus-within:not([disabled]):not([opened])) .line .underline:after | {}    |
| --cells-dropdown-layer-dark-hovered                           | :host(.dark:focus-within:not([disabled]):not([opened]))                   | {}    |
| --cells-dropdown-layer-opened                                 | :host([opened]:not([disabled]))                                           | {}    |
| --cells-dropdown-layer-opened-line                            | :host([opened]:not([disabled])) .line                                     | {}    |
| --cells-dropdown-layer-opened-line-underline-after            | :host([opened]:not([disabled])) .line .underline::after                   | {}    |
| --cells-dropdown-layer-opened-line-icon-open                  | :host([opened]:not([disabled])) .line .icons .icon-open                   | {}    |
| --cells-dropdown-layer-opened-layer                           | :host([opened]:not([disabled])) .layer                                    | {}    |
| --cells-dropdown-layer-dark-opened                            | :host(.dark[opened]:not([disabled]))                                      | {}    |
| --cells-dropdown-layer-disabled                               | :host([disabled])                                                         | {}    |
| --cells-dropdown-layer-disabled-line-icons                    | :host([disabled]) .line .icons                                            | {}    |
| --cells-dropdown-layer-disabled-line-icon-disabled            |                                                                           | {}    |
| --cells-dropdown-layer-disabled-line-icon-open                |                                                                           | {}    |
| --cells-dropdown-layer-dark-disabled                          | :host([disabled]) .line .icons .icon-open                                 | {}    |
| --cells-dropdown-layer-with-error                             | :host(.dark[disabled])                                                    | {}    |
| --cells-dropdown-layer-with-error-text                        | :host([has-error]:not([disabled]):not([opened]))                          | {}    |
| --cells-dropdown-layer-dark-with-error                        | :host([has-error]:not([disabled]):not([opened])) .error-text              | {}    |
| --cells-dropdown-layer-small                                  | :host(.dark[has-error]:not([disabled]):not([opened]))                     | {}    |
| --cells-dropdown-layer-small-control-text                     | :host(.small)                                                             | {}    |
| --cells-dropdown-layer-small-control-icon                     | :host(.small) .control-text                                               | {}    |
| --cells-dropdown-layer-small-layer-top                        | :host(.small) .control-icon                                               | {}    |
| --cells-dropdown-layer-small-layer-content                    | :host(.small) .layer.top                                                  | {}    |
| --cells-dropdown-layer-small-error-text                       | :host(.small) .layer-content                                              | {}    |
| --cells-dropdown-layer-small-opened                           | :host(.small) .error-text                                                 | {}    |
| --cells-dropdown-layer-small-opened-line-icon-open            | :host(.small[opened]:not([disabled]))                                     | {}    |
| --cells-dropdown-layer-icon-only                              | :host(.small[opened]:not([disabled])) .line .icons .icon-open             | {}    |
| --cells-dropdown-layer-icon-only-control                      | :host(.icon-only)                                                         | {}    |
| --cells-dropdown-layer-icon-only-control-icon                 | :host(.icon-only) .control                                                | {}    |
| --cells-dropdown-layer-icon-only-control-text                 | :host(.icon-only) .control-icon                                           | {}    |
| --cells-dropdown-layer-icon-only-line                         | :host(.icon-only) .control-text                                           | {}    |
| --cells-dropdown-layer-icon-only-line-underline-after         | :host(.icon-only) .line                                                   | {}    |
| --cells-dropdown-layer-icon-only-line-icons                   | :host(.icon-only) .line .underline::after                                 | {}    |
| --cells-dropdown-layer-icon-only-hovered                      | :host(.icon-only) .line .icons                                            | {}    |
| --cells-dropdown-layer-icon-only-hovered-line-underline-after | :host(.icon-only:focus-within:not([disabled]):not([opened]))              | {}    |

 * @customElement
 * @demo demo/index.html
 * @extends {LitElement}
 */
class cellsDropdownLayer extends LitElement {

  static get is() {
    return 'cells-dropdown-layer';
  }

  static get properties() {
    return {
      /**
       * Set dropdown as disabled
       */
      disabled: {
        type: Boolean,
        reflect: true,
      },

      /**
       * Icon to show to the left of the label
       */
      icon: {
        type: String
      },

      /**
       * Prefix for the label
       */
      prefix: {
        type: String
      },

      /**
       * Text label for control
       **/
      label: {
        type: String
      },

      /**
       * Disabled icon besides underline
       */
      iconDisabled: {
        type: String,
        attribute: 'icon-disabled'
      },

      /**
       * Icon to show besides underline
       */
      iconOpen: {
        type: String,
        attribute: 'icon-open'
      },

      /**
       * If true, layer is opened
       */
      opened: {
        type: Boolean
      },

      /**
       * Error message
       */
      error: {
        type: String,
      },

      /**
       * If true, layer can be less wide than control
       */
      controlAsMinWidthOff: {
        type: Boolean,
        attribute: 'control-as-min-width-off'
      },

      /**
       * Min height for layer
       */
      minHeight: {
        type: Number,
        attribute: 'min-height'
      },
      /**
       * Horizontal direction in which layer will open. Allowed values are 'left-to-right', 'right-to-left', 'centered' and 'auto'
       */
      openingX: {
        type: String,
        attribute: 'opening-x'
      },

      /**
       * Vertical direction in which layer will open. Allowed values are 'top-to-bottom', 'bottom-to-top' and 'auto'
       */
      openingY: {
        type: String,
        attribute: 'opening-y',
      },

      /**
       * Minimum distance from layer limits to viewport
       */
      safeMargin: {
        type: Number,
        attribute: 'safe-margin',
      },

      /**
       * If true, layer can overflow screen width limits
       */
      overflowScreenWidth: {
        type: Boolean,
        attribute: 'overflow-screen-width'
      },

      /**
       * If true, layer can overflow screen height limits
       */
      overflowScreenHeight: {
        type: Boolean,
        attribute: 'overflow-screen-height',
      },

      _layerDirection: {
        type: String
      },

      _maxWidth: {
        type: Number,
      },

      _maxHeight: {
        type: Number,
      },

      _minWidth: {
        type: Number
      }
    };
  }

  constructor() {
    super();
    this.disabled = false;
    this.icon = '';
    this.label = '';
    this.iconDisabled = 'coronita:block';
    this.iconOpen = 'coronita:unfold';
    this._opened = false;
    this._layerDirection = '';
    this.minHeight = 64;
    this.openingX = 'auto';
    this.openingY = 'auto';
    this.safeMargin = 32;
    this.overflowScreenWidth = false;
    this.overflowScreenHeight = false;
  }

  connectedCallback() {
    super.connectedCallback();
    this._docHandler = this._docHandler.bind(this);
    this.addEventListener('keydown', (e) => {
      this._keyHandler(e);
    });
  }

  disconnectedCallback() {
    super.disconnectedCallback();
    document.removeEventListener('click', this._docHandler);
    document.removeEventListener('focusin', this._docHandler);
  }

  firstUpdated() {
    this._controlText = this.shadowRoot.querySelector('.control-text');
    this._layer = this.shadowRoot.querySelector('.layer');
    this._layerContent = this.shadowRoot.querySelector('.layer-content');
  }

  get opened() {
    return this._opened;
  }

  set opened(value) {
    if (value !== this._opened && !this.disabled) {
      this.setAttribute('animating', '');
      requestAnimationFrame(() => {
        requestAnimationFrame(() => {
          if (value) {
            this.setAttribute('opened', '');
          } else {
            this.removeAttribute('opened');
          }
        });
      });
      if (value) {
        this._setSizes();
      }
      this._opened = value;
      this._handleDocumentListeners(value);
      this.dispatchEvent(new CustomEvent('opened-changed', {
        detail: {
          value: value
        }
      }));
    }
  }

  updated(changedProps) {
    if (changedProps.has('error')) {
      if (this.error) {
        this.setAttribute('has-error', '');
      } else {
        this.removeAttribute('has-error');
      }
    }
  }

  static get shadyStyles() {
    return `
      ${styles.cssText}
      ${getComponentSharedStyles('cells-dropdown-layer-shared-styles')}
    `;
  }

  render() {
    return html`
      <style>${this.constructor.shadyStyles}</style>

      <div class="opener" @click="${this._clickHandler}">

        <div class="control">
          <div class="control-icon" ?hidden="${!this.icon}">
            <cells-icon class="icon" .icon="${this.icon}"></cells-icon>
          </div>
          <button class="control-text" ?disabled="${this.disabled}" @focus="${this._focus}" @blur="${this._blur}">
            <span class="control-prefix">${this.prefix}</span>
            ${this.label}
          </button>
        </div>

        <div class="line">
          <div class="underline"></div>
          <div class="icons">
            <cells-icon class="icon icon-disabled" .icon="${this.iconDisabled}"></cells-icon>
            <cells-icon class="icon icon-open" .icon="${this.iconOpen}"></cells-icon>
          </div>
        </div>

        <div class="error-text">
          <span>${this.error}</span>
        </div>
      </div>

      <div class="layer ${this._layerDirection}"
        style="${this._checkMaxWidth(this._maxWidth)} ${this._checkMaxHeight(this._maxHeight)}"
        @transitionend="${this._fixSize}">
        <div class="layer-wrapper">
          <div class="layer-content" style="min-width:${this._minWidth}px;">
            <slot></slot>
          </div>
        </div>
      </div>
    `;
  }

  /**
   * Adds listeners to close layer on outside focus/click
   */
  _handleDocumentListeners(newValue) {
    if (newValue) {
      document.addEventListener('click', this._docHandler);
      document.addEventListener('focusin', this._docHandler);
    } else {
      document.removeEventListener('click', this._docHandler);
      document.removeEventListener('focusin', this._docHandler);
    }
  }

  _docHandler(ev) {
    if (ev.composedPath().indexOf(this) < 0 || ev.composedPath()[0] === this._layer) {
      this.opened = false;
    }
  }

  /**
   * Toggles opened state on click
   */
  _clickHandler() {
    this.opened = !this.opened;
  }

  /**
   * Set focus on button
   */
  focus() {
    this._controlText.focus();
  }

  /**
   * Closes opened layer if Esc key is pressed
   */
  _keyHandler(e) {
    if (e.keyCode === 27 && this.opened) {
      e.preventDefault();
      this.opened = false;
    }
  }

  /**
   * Sets direction classes on layer
   */
  _setSizes() {
    this._minWidth = this.controlAsMinWidthOff ? 80 : this.offsetWidth;
    const elemRect = this.getBoundingClientRect();
    const dom = document.documentElement;
    /* istanbul ignore next */
    const viewW = Math.max(dom.clientWidth, window.innerWidth || 0);
    /* istanbul ignore next */
    const viewH = Math.max(dom.clientHeight, window.innerHeight || 0);
    const horizontal = this._checkHorizontal(elemRect, viewW);
    const vertical = this._checkVertical(elemRect, viewH);
    this._layerDirection = vertical + ' ' + horizontal;
  }

  /**
   * Set max width of layer and returns horizontal direction
   */
  _checkHorizontal(opener, view) {
    const rightSpace = view - opener.left - this.safeMargin;
    const leftSpace = opener.right - this.safeMargin;
    let max;
    let result;
    switch (this.openingX) {
      case 'left-to-right':
        max = rightSpace;
        result = 'left';
        break;
      case 'right-to-left':
        max = leftSpace;
        result = 'right';
        break;
      case 'centered':
        max = Math.min((opener.right - this.safeMargin - (opener.right - opener.left) / 2), (view - this.safeMargin - opener.left - ((opener.right - opener.left) / 2))) * 2;
        result = 'centered';
        break;
      default:
        if (rightSpace < this._minWidth && leftSpace > rightSpace) {
          max = leftSpace;
          result = 'right';
        } else {
          max = rightSpace;
          result = 'left';
        }
        break;
    }
    this._maxWidth = this.overflowScreenWidth ? null : max;
    return result;
  }

  _checkMaxWidth(_maxWidth) {
    return _maxWidth ? `max-width:${_maxWidth}px;` : '';
  }

  /**
   * Set max height of layer and returns vertical direction
   */
  _checkVertical(opener, view) {
    const bottomSpace = view - opener.bottom - this.safeMargin;
    const topSpace = opener.top - this.safeMargin;
    let max;
    let result;
    switch (this.openingY) {
      case 'top-to-bottom':
        max = bottomSpace;
        result = 'top';
        break;
      case 'bottom-to-top':
        max = topSpace;
        result = 'bottom';
        break;
      default:
        if (bottomSpace < this.minHeight && topSpace > bottomSpace) {
          max = topSpace;
          result = 'bottom';
        } else {
          max = bottomSpace;
          result = 'top';
        }
        break;
    }
    this._maxHeight = this.overflowScreenHeight ? null : max;
    return result;
  }

  _checkMaxHeight(_maxHeight) {
    return _maxHeight ? `max-height:${_maxHeight}px;` : '';
  }

  /**
   * Reset layer sizes
   */
  _fixSize() {
    this.removeAttribute('animating');
    this._layer.style.width = this.opened ? this._layerContent.offsetWidth + 1 + 'px' : '100vw';
    if (!this.opened) {
      this._layerDirection = '';
      this._maxWidth = 0;
      this._maxHeight = 0;
    }
  }

  _focus() {
    this.setAttribute('focused', '');
  }

  _blur() {
    this.removeAttribute('focused');
  }

  /**
   * Closes layer
   */
  close() {
    this.opened = false;
  }

  /**
   * Opens layer
   */
  open() {
    this.opened = true;
  }

}

customElements.define(cellsDropdownLayer.is, cellsDropdownLayer);
