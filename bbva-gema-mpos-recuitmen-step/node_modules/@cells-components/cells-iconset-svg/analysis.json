{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "This component allows to define icon sets containing svg icons. It is based on Polymer's [iron-iconset-svg](https://www.webcomponents.org/element/@polymer/iron-iconset-svg) element.\n\nExample:\n```html\n<html>\n  <head>\n    <script type=\"module\">\n      import '@cells-components/cells-iconset-svg/cells-iconset-svg.js';\n      import '@polymer/iron-icon/iron-icon.js';\n    </script>\n  </head>\n  <body>\n    <cells-iconset-svg name=\"inline\" size=\"24\">\n      <svg>\n        <defs>\n          <g id=\"shape\">\n            <rect x=\"12\" y=\"0\" width=\"12\" height=\"24\"></rect>\n            <circle cx=\"12\" cy=\"12\" r=\"12\"></circle>\n          </g>\n        </defs>\n      </svg>\n    </cells-iconset-svg>\n\n    <iron-icon icon=\"inline:shape\" role=\"img\" aria-label=\"A shape\"></iron-icon>\n  </body>\n</html>\n```",
      "summary": "",
      "path": "cells-iconset-svg.js",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "Name of the iconset.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "size",
          "type": "number | null | undefined",
          "description": "Size for each icon in the iconset. Icons must be square.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "rtlMirroring",
          "type": "boolean | null | undefined",
          "description": "If true, icons can be mirrored when decorated with a 'mirror-in-rtl' attribute",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 37
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "useGlobalRtlAttribute",
          "type": "boolean | null | undefined",
          "description": "If true, RTL will be based on the dir attribute of body or html elements",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 46
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "overflow",
          "type": "boolean | null | undefined",
          "description": "If true, icons will have visible overflow; useful for SVG shadows that overflow the icon viewbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getIconNames",
          "description": "Construct an array of all icon names in this iconset.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "applyIcon",
          "description": "Applies an icon to the given element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            },
            {
              "name": "iconName"
            }
          ]
        },
        {
          "name": "removeIcon",
          "description": "Removes an icon from the given element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 126,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_targetIsRTL",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 2
            },
            "end": {
              "line": 148,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ]
        },
        {
          "name": "_nameChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 162,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createIconMap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 172,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_cloneIcon",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            },
            {
              "name": "mirrorAllowed"
            }
          ]
        },
        {
          "name": "_prepareSvgClone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "sourceSvg"
            },
            {
              "name": "size"
            },
            {
              "name": "mirrorAllowed"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 203,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "CellsIconsetSvg",
      "attributes": [
        {
          "name": "name",
          "description": "Name of the iconset.",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "size",
          "description": "Size for each icon in the iconset. Icons must be square.",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 28
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "rtl-mirroring",
          "description": "If true, icons can be mirrored when decorated with a 'mirror-in-rtl' attribute",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 37
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "use-global-rtl-attribute",
          "description": "If true, RTL will be based on the dir attribute of body or html elements",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 46
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "overflow",
          "description": "If true, icons will have visible overflow; useful for SVG shadows that overflow the icon viewbox",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 33
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-iconset-svg"
    }
  ]
}
