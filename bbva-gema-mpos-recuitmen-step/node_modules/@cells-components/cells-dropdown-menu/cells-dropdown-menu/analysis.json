{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "This component uses `cells-dropdown-layer` to show a list of selectable items which can be checked. It works as a select component, and expects an array of items to build the list.\n\n```html\n<cells-dropdown-menu placeholder=\"Default text\" items='[...]'></cells-dropdown-layer>\n```\n\n```javascript\n[{\n  'name': 'Lorem ipsum',\n  'value': 'loremipsum'\n}, {\n  'name': 'Lorem ipsum 2',\n  'value': 'loremipsum2',\n  'icon': 'coronita:creditcard'\n}]\n```\n\nThe menu can be set as required (which will show an error if no option is checked) or disabled. You can limit the amount of visible options at once with the 'maxItemsShown' property.\n\nYou can use the 'selected' property to set the currently selected item by index, as well as the 'value' property for the value of the current index.\n\n## Icons\n\nSince this component uses icons, it will need an [iconset](https://platform.bbva.com/en-us/developers/engines/cells/documentation/cells-architecture/composing-with-components/cells-icons) in your project as an application level dependency. In fact, this component uses an iconset in its demo.\n\n## Styling\n\nThe following custom properties and mixins are available for styling:\n\n### Custom Properties\n| Custom Property                                           | Selector                          | CSS Property                                | Value                                                             |\n| --------------------------------------------------------- | --------------------------------- | ------------------------------------------- | ----------------------------------------------------------------- |\n| --font-default                                            | :host                             | font-family                                 |  sans-serif                                                       |\n| --cells-dropdown-menu-value-color                         | :host                             | --item-value-color                          |  ![#D0D1D4](https://placehold.it/15/D0D1D4/000000?text=+) #D0D1D4 |\n| --cells-dropdown-menu-underline-color                     | :host                             | --item-underline-color                      |  ![#565C67](https://placehold.it/15/565C67/000000?text=+) #565C67 |\n| --cells-dropdown-menu-highlighted-color                   | :host                             | --item-highlighted-color                    |  ![#FFF](https://placehold.it/15/FFF/000000?text=+) #FFF          |\n| --cells-dropdown-menu-haserror-layer-icon-color           | :host([has-error])                | --cells-dropdown-layer-icon-color           |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |\n| --cells-dropdown-menu-haserror-layer-underline-color      | :host([has-error])                | --cells-dropdown-layer-underline-color      |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |\n| --cells-dropdown-menu-haserror-dark-layer-icon-color      | :host([has-error])                | --cells-dropdown-layer-dark-icon-color      |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |\n| --cells-dropdown-menu-haserror-dark-layer-underline-color | :host([has-error])                | --cells-dropdown-layer-dark-underline-color |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |\n| --cells-dropdown-menu-item-error-value-color              | .item.error                       | --item-value-color                          |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |\n| --cells-dropdown-menu-item-error-highlighted-color        | .item.error                       | --item-highlighted-color                    |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |\n| --cells-dropdown-menu-item-error-underline-color          | .item.error                       | --item-underline-color                      |  ![#F970B5](https://placehold.it/15/F970B5/000000?text=+) #F970B5 |\n| --item-value-color                                        | .control                          | color                                       | `No fallback value`                                               |\n| --item-highlighted-color                                  | .item.highlighted .control .icon  | color                                       | `No fallback value`                                               |\n| --item-highlighted-color                                  | .item.highlighted .control .label | color                                       | `No fallback value`                                               |\n| --item-highlighted-color                                  | .control .icon-check              | color                                       | `No fallback value`                                               |\n| --item-underline-color                                    | .line::after                      | background-color                            | `No fallback value`                                               |\n| --item-highlighted-color                                  | .item.highlighted .line::after    | background-color                            | `No fallback value`                                               |\n### @apply\n| Mixins                                           | Selector                                        | Value |\n| ------------------------------------------------ | ----------------------------------------------- | ----- |\n| --cells-dropdown-menu                            | :host                                           | {}    |\n| --cells-dropdown-menu-haserror                   | :host([has-error])                              | {}    |\n| --cells-dropdown-menu-layer                      | .layer                                          | {}    |\n| --cells-dropdown-menu-lists                      | .item                                           | {}    |\n| --cells-dropdown-menu-item                       | .item                                           | {}    |\n| --cells-dropdown-menu-item-error                 | .item.error                                     | {}    |\n| --cells-dropdown-menu-item-last                  | .item:last-of-type                              | {}    |\n| --cells-dropdown-menu-control                    | .control                                        | {}    |\n| --cells-dropdown-menu-control-icon               | .control .icon                                  | {}    |\n| --cells-dropdown-menu-control-icon-selected      | .item.highlighted .control .icon                | {}    |\n| --cells-dropdown-menu-control-label              | .control .label                                 | {}    |\n| --cells-dropdown-menu-control-label-selected     | .item.highlighted .control .label               | {}    |\n| --cells-dropdown-menu-control-icon-check         | .control .icon-check                            | {}    |\n| --cells-dropdown-menu-control-icon-check-checked | .item[aria-checked=\"true\"] .control .icon-check | {}    |\n| --cells-dropdown-menu-line                       | .line                                           | {}    |\n| --cells-dropdown-menu-underline                  | .line::after                                    | {}    |\n| --cells-dropdown-menu-underline-selected         | .item.highlighted .line::after                  | {}    |",
      "summary": "Show a custom select component using cells-dropdown-layer",
      "path": "cells-dropdown-menu.js",
      "properties": [
        {
          "name": "layer",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 2
            },
            "end": {
              "line": 351,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "Items to show in the layer\n[{\n  name: 'Item label',\n  value: 'some-value',\n  icon: 'iconset:iconname'\n}]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "iconCheck",
          "type": "string | null | undefined",
          "description": "Check icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Disabled state of the component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "maxItemsShown",
          "type": "number | null | undefined",
          "description": "Max items to show at once in the layer (sets a max Height in the layer)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string | null | undefined",
          "description": "Text to show when no option is selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_label",
          "type": "string | null | undefined",
          "description": "Current label text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "prefix",
          "type": "string | null | undefined",
          "description": "Prefix for label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Required status of the component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "requiredMsg",
          "type": "string | null | undefined",
          "description": "Message to show when no option is selected in a required dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "Opened status",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "selected",
          "type": "number | null | undefined",
          "description": "Currently selected item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Value of currently selected item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "controlIcon",
          "type": "string | null | undefined",
          "description": "Icon to show to the left of the layer control label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "iconDisabled",
          "type": "string | null | undefined",
          "description": "Disabled icon besides underline",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "iconOpen",
          "type": "string | null | undefined",
          "description": "Icon to show besides underline",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "controlAsMinWidthOff",
          "type": "boolean | null | undefined",
          "description": "If true, layer can be less wide than control",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "minHeight",
          "type": "number | null | undefined",
          "description": "Min height of layer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "openingX",
          "type": "string | null | undefined",
          "description": "Horizontal direction in which layer will open. Allowed values are 'left-to-right', 'right-to-left', 'centered' and 'auto'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "openingY",
          "type": "string | null | undefined",
          "description": "Vertical direction in which layer will open. Allowed values are 'top-to-bottom', 'bottom-to-top' and 'auto'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "safeMargin",
          "type": "number | null | undefined",
          "description": "Minimum distance from layer limits to viewport",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 6
            },
            "end": {
              "line": 247,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "error",
          "type": "string | null | undefined",
          "description": "Error message",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 2
            },
            "end": {
              "line": 304,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 2
            },
            "end": {
              "line": 347,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setOpened",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 2
            },
            "end": {
              "line": 355,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 362,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "Open layer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 2
            },
            "end": {
              "line": 369,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "Close layer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 2
            },
            "end": {
              "line": 376,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_maxItemsShown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 2
            },
            "end": {
              "line": 381,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_arrowMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 2
            },
            "end": {
              "line": 393,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_select",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 2
            },
            "end": {
              "line": 400,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 2
            },
            "end": {
              "line": 408,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_itemClick",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 410,
              "column": 2
            },
            "end": {
              "line": 414,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 2
            },
            "end": {
              "line": 429,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_opened",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 2
            },
            "end": {
              "line": 442,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 444,
              "column": 2
            },
            "end": {
              "line": 446,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            },
            {
              "name": "_label"
            }
          ]
        },
        {
          "name": "_restoreFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 448,
              "column": 2
            },
            "end": {
              "line": 452,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_keyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 454,
              "column": 2
            },
            "end": {
              "line": 472,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_arrowPressed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 2
            },
            "end": {
              "line": 499,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectKeyPressed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 501,
              "column": 2
            },
            "end": {
              "line": 519,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectedObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 521,
              "column": 2
            },
            "end": {
              "line": 531,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_itemsObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 533,
              "column": 2
            },
            "end": {
              "line": 542,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 544,
              "column": 2
            },
            "end": {
              "line": 546,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setErrorClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 2
            },
            "end": {
              "line": 550,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "error"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 551,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "cellsDropdownMenu",
      "attributes": [
        {
          "name": "items",
          "description": "Items to show in the layer\n[{\n  name: 'Item label',\n  value: 'some-value',\n  icon: 'iconset:iconname'\n}]",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "icon-check",
          "description": "Check icon",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled state of the component",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "max-items-shown",
          "description": "Max items to show at once in the layer (sets a max Height in the layer)",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "placeholder",
          "description": "Text to show when no option is selected",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "prefix",
          "description": "Prefix for label",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Required status of the component",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required-msg",
          "description": "Message to show when no option is selected in a required dropdown",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opened",
          "description": "Opened status",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected",
          "description": "Currently selected item",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "value",
          "description": "Value of currently selected item",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "control-icon",
          "description": "Icon to show to the left of the layer control label",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-disabled",
          "description": "Disabled icon besides underline",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-open",
          "description": "Icon to show besides underline",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "control-as-min-width-off",
          "description": "If true, layer can be less wide than control",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "min-height",
          "description": "Min height of layer",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "opening-x",
          "description": "Horizontal direction in which layer will open. Allowed values are 'left-to-right', 'right-to-left', 'centered' and 'auto'",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opening-y",
          "description": "Vertical direction in which layer will open. Allowed values are 'top-to-bottom', 'bottom-to-top' and 'auto'",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "safe-margin",
          "description": "Minimum distance from layer limits to viewport",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 6
            },
            "end": {
              "line": 247,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "error",
          "description": "Error message",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "cells-dropdown-menu-user-value-changed",
          "description": "Fired when user checks a value in the layer",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "cells-dropdown-menu-value",
          "description": "Fired when value changes",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-dropdown-menu"
    }
  ]
}
