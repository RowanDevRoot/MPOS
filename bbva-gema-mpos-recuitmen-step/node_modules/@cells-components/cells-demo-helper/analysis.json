{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`cells-demo-helper` allows to generate a demo page for multiple demo cases of a component.\n\nIt automatically populates a dropdown with all the available cases.\nIt also inserts the demo in a resizable iframe to ease showing responsive features of the component.\n\nFinally, it places each demo case's code in the code area, so the final user can copy/paste it.\n\n## Usage\n\n`cells-demo-helper` expects to have one or more `cells-demo-case` instances inside it, each instance will be a 'demo case'.\n\nThe component will get the __content__ of each demo case, which must be wrapped in a `<template>` tag, and it will generate dynamically an iframe with the code inside each demo case's template.\n\n__Important:__ the `template` that must be put as child of `cells-demo-case`, and which wraps all the code for the case, won't be passed to the iframe. So, don't use it for `dom-bind` purpose. You can add template tags with dom-bind inside this template tag.\n\n__Important:__ all dependencies inside the iframe will be retrieved from the `<head>` tag of the page in which `cells-demo-helper` is used (that is, the demo html).\n\nAlternatively, you can specify which dependencies should be imported in the demo cases but not in the demo main page using 'type=\"lazy-module\"' instead of 'type=\"module\"' for them. This way, just the dependencies with 'lazy-module' will be used inside the demo cases.\n\nUsing 'lazy-module', any other script with type 'module' won't be included in the demo cases iframe.\n\nEach demo should have a `heading` attribute with the title of the case, and an optional `description` attribute with an extended text if necessary.\n\nExample:\n```html\n<head>\n...\n  <script type=\"module\" href=\"mycomponent/mycomponent.html\">\n</head>\n<body>\n...\n<cells-demo-helper>\n  <cells-demo-case heading=\"Case 1\">\n    <template>\n      Demo content here\n      <my-component>...</my-component>\n    </template>\n  </cells-demo-case>\n</cells-demo-helper>\n...\n</body>\n```\n\n## Resizable viewport\n\n`cells-demo-helper` uses `cells-demo-resizable-viewport` to provide resizable features to the iframe, and will use its default values and properties. You can use the following attributes to customize how it behaves:\n\n- __resolution__: initial selected resolution.\n- __breakpoints__: object containing the viewport options, as describen in `cells-demo-resizable-viewport` docs.\n\nExamples:\n```html\n<cells-demo-helper resolution=\"tablet\">\n  <cells-demo-case heading=\"Case 1\">\n    <template>\n      Demo content here\n    </template>\n  </cells-demo-case>\n</cells-demo-helper>\n```\n\n```html\n<cells-demo-helper resolution=\"Mobile\" breakpoints='{\n    \"mobile\": { \"width\": 360, \"height\": 640, \"name\": \"Mobile\" },\n    \"tablet\": { \"width\": 768, \"height\": 1024, \"name\": \"Tablet\" }}'>\n  <cells-demo-case heading=\"Case 1\">\n    <template>\n      Demo content here\n    </template>\n  </cells-demo-case>\n</cells-demo-helper>\n```\n\n## i18n\n\nUsing the `i18n` attribute will insert a `cells-demo-lang-switcher` component. It will receive the default values of that component, although you can customize them using the attributes `langs` and `locales-path`. The lang selection will be propagated to the demo case iframe.\n\nExamples:\n```html\n<cells-demo-helper i18n>\n  <cells-demo-case heading=\"Case 1\">\n    <template>\n      Demo content here\n    </template>\n  </cells-demo-case>\n</cells-demo-helper>\n```\n\n```html\n<cells-demo-helper i18n langs='[\"en\",\"es\"]' locales-path=\"../locales\">\n  <cells-demo-case heading=\"Case 1\">\n    <template>\n      Demo content here\n    </template>\n  </cells-demo-case>\n</cells-demo-helper>\n```\n\n## Events\n\nYou can pass an Array of event names to the `events` attribute, it will be the same than passing them to `cells-demo-event-toaster`, which will add event listeners for all of them.\n\nSo each time one of those events is fired inside the demo cases iframe, a paper-toast element will be fired with the event's information.\n\nExample:\n```html\n<cells-demo-helper events='[\"my-component-event-open\",\"my-component-event-close\"]'>\n  <cells-demo-case heading=\"Case 1\">\n    <template>\n      Demo content here\n    </template>\n  </cells-demo-case>\n</cells-demo-helper>\n```\n\n## Extra Themes\n\nYou can show a dropdown to switch the theme used in your demos. To do this, add a 'theme' attribute to your theme modules including the theme name. You must have the adequeate devDependencies for the themes in your package.json.\n\nOn demo page load, the default theme selected will be the first one of the available themes. If you want to set a different available theme as the demo default one, you can pass its name to the attribute `default-theme`.\n\nExamples:\n```html\n<head>\n  ...\n  <script type=\"lazy-module\" theme=\"cells-coronita-base-theme\" src=\"/path/to/the/coronita/base/theme.js\">\n  <script type=\"lazy-module\" theme=\"cells-banking-theme\" src=\"/path/to/the/banking/theme.js\">\n  ...\n</head>\n<body>\n  ...\n  <cells-demo-helper default-theme=\"cells-banking-theme\">\n    <cells-demo-case heading=\"Case 1\">\n      <template>\n        Demo content here\n      </template>\n    </cells-demo-case>\n  </cells-demo-helper>\n  ...\n</body>\n```\n\n## Hiding header and sidebar for development purposes\n\nThe header and sidebar can be hidden by adding the attribute \"hide-ui\" to the component. This feature may be useful when you need to test the demo in a mobile device.\n\nExample:\n\n```html\n<cells-demo-helper hide-ui></cells-demo-helper>\n```\n\n## Styling\n\nThe following custom properties and mixins are available for styling:\n\n### Custom Properties\n| Custom Property                | Selector | CSS Property                      | Value               |\n| ------------------------------ | -------- | --------------------------------- | ------------------- |\n| --cells-fontDefault            | :host    | font-family                       |  Lato, sans-serif   |\n| --cells-demo-helper-text-color | :host    | color                             | `No fallback value` |\n| --cells-demo-helper-text-color | .tabs    | --cells-radio-tabs-color-selected | `No fallback value` |\n### @apply\n| Mixins                                       | Selector                                      | Value |\n| -------------------------------------------- | --------------------------------------------- | ----- |\n| --cells-demo-helper                          | :host                                         | {}    |\n| --cells-demo-helper-ui-checkbox              | .ui-checkbox                                  | {}    |\n| --cells-demo-helper-header                   | .header                                       | {}    |\n| --cells-demo-helper-tabs                     | .tabs                                         | {}    |\n| --cells-demo-helper-top                      | .top-row                                      | {}    |\n| --cells-demo-helper-case-heading             | .heading                                      | {}    |\n| --cells-demo-helper-case-heading-title       | .heading-title                                | {}    |\n| --cells-demo-helper-case-heading-description | .heading-description                          | {}    |\n| --cells-demo-helper-selectors                | .selectors                                    | {}    |\n| --cells-demo-helper-dropdown                 | .dropdown                                     | {}    |\n| --cells-demo-helper-main                     | .main                                         | {}    |\n| --cells-demo-helper-resize-ui                | .resizer                                      | {}    |\n| --cells-demo-helper-small-resize-ui          | @media (max-width: 767px) > .resizer          | {}    |\n| --cells-demo-helper-iframe-container         | .iframe-container                             | {}    |\n| --cells-demo-helper-small-iframe-container   | @media (max-width: 767px) > .iframe-container | {}    |\n| --cells-demo-helper-medium-iframe-container  | @media (min-width: 768px) > .iframe-container | {}    |\n| --cells-demo-helper-iframe                   | .iframe-container iframe                      | {}    |\n| --cells-demo-helper-iframe-mobile-frame      | .iframe-container:before                      | {}    |\n| --cells-demo-helper-overlay                  | .overlay                                      | {}    |\n| --cells-demo-helper-overlay-visible          | .overlay.visible                              | {}    |\n| --cells-demo-helper-code-wrapper             | .code-wrapper                                 | {}    |\n| --cells-demo-helper-code-wrapper-visible     | .visible .code-wrapper                        | {}    |\n| --cells-demo-helper-code-overlay-inner       | .overlay-inner                                | {}    |\n| --cells-demo-helper-code-copy-button         | .copy-button                                  | {}    |\n| --cells-demo-helper-code                     | .code                                         | {}    |\n| --cells-demo-helper-code-pre                 | .code > pre                                   | {}    |",
      "summary": "",
      "path": "cells-demo-helper.js",
      "properties": [
        {
          "name": "_cases",
          "type": "Array | null | undefined",
          "description": "Array with the demo cases",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 296,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_markdown",
          "type": "string | null | undefined",
          "description": "Current markdown code to show in code snippet bar",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 6
            },
            "end": {
              "line": 304,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_caseTitle",
          "type": "string | null | undefined",
          "description": "Current case title",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_description",
          "type": "string | null | undefined",
          "description": "Current case description",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "i18n",
          "type": "boolean | null | undefined",
          "description": "Whether the demo must show the lang switcher",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "langs",
          "type": "Array | null | undefined",
          "description": "Array of custom langs to pass to cells-lang-demo-switcher",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_lang",
          "type": "string | null | undefined",
          "description": "Current selected lang",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 6
            },
            "end": {
              "line": 345,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_setIframeLang\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "localesPath",
          "type": "string | null | undefined",
          "description": "Path of custom locales folder to pass to cells-lang-demo-switcher",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 353,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"../locales\""
        },
        {
          "name": "events",
          "type": "Array | null | undefined",
          "description": "Array of events which cells-demo-event-toaster should listen for",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 6
            },
            "end": {
              "line": 360,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "resolution",
          "type": "string | null | undefined",
          "description": "Default resolution key for the iframe",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mobile\""
        },
        {
          "name": "_resolution",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 6
            },
            "end": {
              "line": 372,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "breakpoints",
          "type": "Object | null | undefined",
          "description": "Custom breakpoints for cells-demo-resizable-viewport",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_noTheme",
          "type": "string | null | undefined",
          "description": "Default \"no theme\" option text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 387,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"standalone (no theme)\""
        },
        {
          "name": "_themes",
          "type": "Array | null | undefined",
          "description": "Full list of themes used",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 6
            },
            "end": {
              "line": 395,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "defaultTheme",
          "type": "string | null | undefined",
          "description": "Selected theme on page load",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 6
            },
            "end": {
              "line": 403,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "selectedTheme",
          "type": "number | null | undefined",
          "description": "Index of the selected theme",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 6
            },
            "end": {
              "line": 412,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_currentTheme",
          "type": "string | null | undefined",
          "description": "Stores current selected theme",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 417,
              "column": 6
            },
            "end": {
              "line": 419,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_tpl",
          "type": "string | null | undefined",
          "description": "Stores current iframe template",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 424,
              "column": 6
            },
            "end": {
              "line": 426,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "selected",
          "type": "number | null | undefined",
          "description": "Index of the selected demo-case.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 6
            },
            "end": {
              "line": 435,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_noHead",
          "type": "boolean | null | undefined",
          "description": "Prevents current document head to be passed on to the iframe. Useful for testing purposes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 440,
              "column": 6
            },
            "end": {
              "line": 443,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "multiToast",
          "type": "boolean | null | undefined",
          "description": "Allow to show multiple toasts simultaneously",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 448,
              "column": 6
            },
            "end": {
              "line": 451,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_toastAlign",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 6
            },
            "end": {
              "line": 456,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"bottom\""
        },
        {
          "name": "_toastPositionTarget",
          "type": "Element | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 460,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Element"
            }
          }
        },
        {
          "name": "_tabs",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 462,
              "column": 6
            },
            "end": {
              "line": 467,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[\"Preview\",\"Code\"]"
        },
        {
          "name": "_tabindex",
          "type": "number | null | undefined",
          "description": "Used to set a negative tabindex to focusable elements\nwhen the code tab is active.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 473,
              "column": 6
            },
            "end": {
              "line": 475,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_selectedTab",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 477,
              "column": 6
            },
            "end": {
              "line": 482,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedTabChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "hideUi",
          "type": "boolean | null | undefined",
          "description": "Set to true to hide all the UI elements except the preview for development purposes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 487,
              "column": 6
            },
            "end": {
              "line": 491,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_firstRender",
          "type": "boolean | null | undefined",
          "description": "Used to show the spinner only the first time (not between demos).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 496,
              "column": 6
            },
            "end": {
              "line": 499,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "showStyleModuleWarnings",
          "type": "boolean | null | undefined",
          "description": "Show console warnings about style modules not found in components (shared-styles).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 504,
              "column": 6
            },
            "end": {
              "line": 507,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 519,
              "column": 2
            },
            "end": {
              "line": 531,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onSelectedCaseIndexChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 533,
              "column": 2
            },
            "end": {
              "line": 538,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            },
            {
              "name": "cases"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onSelectedThemeIndexChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 540,
              "column": 2
            },
            "end": {
              "line": 546,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            },
            {
              "name": "cases"
            },
            {
              "name": "themes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onDefaultThemeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 2
            },
            "end": {
              "line": 560,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "defaultTheme"
            },
            {
              "name": "themes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isActiveTab",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 562,
              "column": 2
            },
            "end": {
              "line": 564,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedTab"
            },
            {
              "name": "tabName"
            }
          ]
        },
        {
          "name": "_selectedTabChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 2
            },
            "end": {
              "line": 573,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "tab"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkThemesLength",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 575,
              "column": 2
            },
            "end": {
              "line": 577,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_themes"
            }
          ]
        },
        {
          "name": "_computedThemes",
          "description": "Creates array with full list of themes for themes dropdown",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 582,
              "column": 2
            },
            "end": {
              "line": 601,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "theme"
            }
          ]
        },
        {
          "name": "_langAdder",
          "description": "Returns the script of initial i18n values to insert in the iframe",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 606,
              "column": 2
            },
            "end": {
              "line": 613,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setIframeLang",
          "description": "Changes dinamically the lang attribute and i18n variables in the iframe",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 619,
              "column": 2
            },
            "end": {
              "line": 632,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "lng",
              "type": "String",
              "description": "lang code"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setCasesDropdown",
          "description": "Populates cases array based on available cells-demo-case contents",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 637,
              "column": 2
            },
            "end": {
              "line": 647,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getHeadForIframe",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 649,
              "column": 2
            },
            "end": {
              "line": 718,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setIframe",
          "description": "Generates iframe for selected case",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 723,
              "column": 2
            },
            "end": {
              "line": 752,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_generateIframe",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 754,
              "column": 2
            },
            "end": {
              "line": 804,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem"
            }
          ]
        },
        {
          "name": "_cleanIframe",
          "description": "Removes existing iframes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 809,
              "column": 2
            },
            "end": {
              "line": 815,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_parseContent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 817,
              "column": 2
            },
            "end": {
              "line": 829,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ]
        },
        {
          "name": "_generateMarkdown",
          "description": "Generates markdown code from the case",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 834,
              "column": 2
            },
            "end": {
              "line": 844,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_passEvents",
          "description": "Creates listener for events inside iframe and propagates events firing to cells-demo-event-toaster",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 849,
              "column": 2
            },
            "end": {
              "line": 863,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "iframe"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_copyToClipboard",
          "description": "Copies code snippet to clipboard",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 868,
              "column": 2
            },
            "end": {
              "line": 885,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resetCopyButtonState",
          "description": "Reset copy button text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 890,
              "column": 2
            },
            "end": {
              "line": 892,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 894,
              "column": 2
            },
            "end": {
              "line": 896,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "height"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 213,
          "column": 0
        },
        "end": {
          "line": 897,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "cellsDemoHelper",
      "attributes": [
        {
          "name": "i18n",
          "description": "Whether the demo must show the lang switcher",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "langs",
          "description": "Array of custom langs to pass to cells-lang-demo-switcher",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "locales-path",
          "description": "Path of custom locales folder to pass to cells-lang-demo-switcher",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 353,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "events",
          "description": "Array of events which cells-demo-event-toaster should listen for",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 6
            },
            "end": {
              "line": 360,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "resolution",
          "description": "Default resolution key for the iframe",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "breakpoints",
          "description": "Custom breakpoints for cells-demo-resizable-viewport",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "default-theme",
          "description": "Selected theme on page load",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 6
            },
            "end": {
              "line": 403,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "selected-theme",
          "description": "Index of the selected theme",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 6
            },
            "end": {
              "line": 412,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selected",
          "description": "Index of the selected demo-case.",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 6
            },
            "end": {
              "line": 435,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "multi-toast",
          "description": "Allow to show multiple toasts simultaneously",
          "sourceRange": {
            "start": {
              "line": 448,
              "column": 6
            },
            "end": {
              "line": 451,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-ui",
          "description": "Set to true to hide all the UI elements except the preview for development purposes.",
          "sourceRange": {
            "start": {
              "line": 487,
              "column": 6
            },
            "end": {
              "line": 491,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-style-module-warnings",
          "description": "Show console warnings about style modules not found in components (shared-styles).",
          "sourceRange": {
            "start": {
              "line": 504,
              "column": 6
            },
            "end": {
              "line": 507,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-theme-changed",
          "description": "Fired when the `selectedTheme` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-demo-helper"
    }
  ]
}
