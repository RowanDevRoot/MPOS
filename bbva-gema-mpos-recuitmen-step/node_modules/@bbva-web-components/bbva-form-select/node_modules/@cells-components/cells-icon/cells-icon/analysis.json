{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "This component displays an icon. It is based on Polymer's [iron-icon](https://www.webcomponents.org/element/@polymer/iron-icon) element.\nBy default an icon renders as a 24px square.\n\nYou can use an image as icon, or use icons from an imported iconset.\n\n```html\n  <cells-icon src=\"demo/location.png\"></cells-icon>\n  <cells-icon icon=\"coronita:close\"></cells-icon>\n```\n\n## Icons\n\nSince this component uses icons, it will need an [iconset](https://platform.bbva.com/en-us/developers/engines/cells/documentation/cells-architecture/components/components-in-depth/icons) in your project as an application level dependency. In fact, this component uses an iconset in its demo.\n\n## Styling\n\nThe following custom properties and mixins are available for styling:\n\n### Custom Properties\n| Custom Property           | Selector | CSS Property | Value                                           |\n|:--------------------------|:---------|:-------------|:------------------------------------------------|\n| --cells-icon-fill-color   | :host    | fill         | currentcolor                                    |\n| --cells-icon-stroke-color | :host    | stroke       | none                                            |\n| --cells-icon-width        | :host    | width        | var(--cells-icon-size, --cells-icon-svg-width)  |\n| --cells-icon-height       | :host    | height       | var(--cells-icon-size, --cells-icon-svg-height) |\n### @apply\n| Mixins       | Selector | Value |\n| ------------ | -------- | ----- |\n| --cells-icon | :host    | {}    |",
      "summary": "",
      "path": "cells-icon.js",
      "properties": [
        {
          "name": "_DEFAULT_ICONSET",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "The name of the icon to use. The name should be of the form:\n`iconset_name:icon_name`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "theme",
          "type": "string | null | undefined",
          "description": "The name of the theme to use, if one is specified by the iconset.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "src",
          "type": "string | null | undefined",
          "description": "If using iron-icon without an iconset, you can set the src to be\nthe URL of an individual icon image file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "size",
          "type": "number | null | undefined",
          "description": "Size (in px) for the icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "width",
          "type": "number | null | undefined",
          "description": "Width for icons",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "height",
          "type": "number | null | undefined",
          "description": "Height for icons",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_isAttached",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 140,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_iconChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 2
            },
            "end": {
              "line": 151,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "icon"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_srcChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 155,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_usesIconset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_updateIcon",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 42,
          "column": 7
        },
        "end": {
          "line": 194,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "CellsIcon",
      "attributes": [
        {
          "name": "icon",
          "description": "The name of the icon to use. The name should be of the form:\n`iconset_name:icon_name`.",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "theme",
          "description": "The name of the theme to use, if one is specified by the iconset.",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "src",
          "description": "If using iron-icon without an iconset, you can set the src to be\nthe URL of an individual icon image file.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "size",
          "description": "Size (in px) for the icon",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 29
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "width",
          "description": "Width for icons",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 29
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "height",
          "description": "Height for icons",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 30
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-icon"
    }
  ]
}
