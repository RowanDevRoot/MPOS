import { LitElement, html } from 'lit-element';
import { getComponentSharedStyles } from '@cells-components/cells-lit-helpers';
import { CellsFocusVisibleMixin as cellsFocusVisibleMixin } from '@cells-components/cells-focus-visible-mixin';
import { bbvaFoundationsStylesFocus } from '@bbva-web-components/bbva-foundations-styles';
import styles from './bbva-list-link-icon-styles.js';
import '@cells-components/cells-icon';
/**
`<bbva-list-link-icon>` is a button with configurable icons for the left and right sides.
The default right icon is an arrow (coronita:forward).

The color of the left icon and text can be changed by customizing `--bbva-list-link-icon-color` or using one of
the available classes for predefined colors (black, green and red). Default color (no class) is blue.

## Available color classes:

| Class name  | Color |
| :-----------| :---------- |
| `neutral`   | `var(--bbva-600, #121212)` |
| `warning`   | `var(--bbva-dark-red, #B92A45)` |
| `success`   | `var(--bbva-dark-green, #277A3E)` |


Example with right icon (default):

```html
<bbva-list-link-icon icon-left="coronita:edit">Hazte cliente</bbva-list-link-icon>
```

Without right icon:

```html
<bbva-list-link-icon icon-left="coronita:edit" icon-right="">Hazte cliente</bbva-list-link-icon>
```

With custom icons:

```html
<bbva-list-link-icon
  icon-left="coronita:edit"
  icon-right="coronita:attached">Hazte cliente</bbva-list-link-icon>
```

## Icons

Since this component uses icons, it will need an [iconset](https://platform.bbva.com/en-us/developers/engines/cells/documentation/cells-architecture/composing-with-components/cells-icons) in your project as an application level dependency. In fact, this component uses an iconset in its demo.

## Styling

The following custom properties are available for styling:

### Custom properties

| Selector        | CSS Property     | CSS Variable                              | Theme Variable     | Foundations/Fallback |
| --------------- | ---------------- | ----------------------------------------- | ------------------ | -------------------- |
| .icon-right     | color            | --bbva-list-link-icon-right-icon-color    | --bbva-medium-blue | #1973b8              |
| .icon-right     | margin-left      | --bbva-global-spacer                      |                    |                      |
| .icon-left      | margin-right     | --bbva-global-spacer                      |                    |                      |
| button          | padding          | --bbva-global-spacer                      |                    |                      |
| button          | padding-bottom   | --bbva-global-spacer                      |                    |                      |
| button          | background-color | --bbva-list-link-icon-background-color    | --bbva-white       | #ffffff              |
| button          | border-bottom    | --bbva-list-link-icon-border-bottom-color | --bbva-300         | #d3d3d3              |
| :host(.success) | color            | --bbva-list-link-icon-color               | --bbva-dark-green  | #277a3e              |
| :host(.warning) | color            | --bbva-list-link-icon-color               | --bbva-dark-red    | #b92a45              |
| :host(.neutral) | color            | --bbva-list-link-icon-color               | --bbva-600         | #121212              |
| :host           | color            | --bbva-list-link-icon-color               | --bbva-medium-blue | #1973b8              |
> Styling documentation generated by Cells CLI

@customElement bbva-list-link-icon
@polymer
@LitElement
@demo demo/index.html
@appliesMixin CellsFocusVisibleMixin
*/
class BbvaListLinkIcon extends cellsFocusVisibleMixin(LitElement) {
  static get is() {
    return 'bbva-list-link-icon';
  }

  static get properties() {
    return {
      /**
       * Icon left.
       */
      iconLeft: {
        type: String,
        attribute: 'icon-left',
      },
      /**
       * Size of the left icon.
       */
      iconLeftSize: {
        type: Number,
        attribute: 'icon-left-size',
      },
      /**
       * Icon Right
       */
      iconRight: {
        type: String,
        attribute: 'icon-right',
      },
      /**
       * Size of the right icon.
       */
      iconRightSize: {
        type: Number,
        attribute: 'icon-right-size',
      },
    };
  }

  constructor() {
    super();
    this.iconLeft = '';
    this.iconLeftSize = 24;
    this.iconRight = 'coronita:forward';
    this.iconRightSize = 24;
  }

  static get styles() {
    return [
      styles,
      getComponentSharedStyles('bbva-list-link-icon-shared-styles'),
      bbvaFoundationsStylesFocus('button:focus'),
    ];
  }

  render() {
    return html`
      <button type="button">
        <cells-icon
          icon="${this.iconLeft}"
          size="${this.iconLeftSize}"
          class="icon icon-left"
        ></cells-icon>
        <span class="text"><slot></slot></span>
        <cells-icon
          icon="${this.iconRight}"
          size="${this.iconRightSize}"
          class="icon icon-right"
          ?hidden="${!this.iconRight}"
        ></cells-icon>
      </button>
    `;
  }
}

customElements.define(BbvaListLinkIcon.is, BbvaListLinkIcon);
