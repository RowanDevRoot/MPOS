import { html, fixture, assert, fixtureCleanup } from '@open-wc/testing';

import '../bbva-list-link-icon.js';

suite('bbva-list-link-icon', () => {
  let el;
  let elementShadowRoot;

  teardown(() => fixtureCleanup());

  setup(async () => {
    el = await fixture(
      html`
        <bbva-list-link-icon>Button text</bbva-list-link-icon>
      `,
    );
    elementShadowRoot = el.shadowRoot;
    await el.updateComplete;
  });

  test('Setting iconLeft sets the left icon', async () => {
    el.iconLeft = 'any';
    const $leftIcon = elementShadowRoot.querySelector('.icon-left');
    await el.updateComplete;
    assert.equal($leftIcon.icon, el.iconLeft);
  });

  test('Setting iconLeftSize sets the size of the left icon', async () => {
    el.iconLeftSize = 20;
    const $leftIcon = elementShadowRoot.querySelector('.icon-left');
    await el.updateComplete;
    assert.strictEqual(parseInt(window.getComputedStyle($leftIcon).width, 10), el.iconLeftSize);
  });

  test('Setting iconRight sets the right icon', async () => {
    el.iconRight = 'any';
    const $rightIcon = elementShadowRoot.querySelector('.icon-right');
    await el.updateComplete;
    assert.equal($rightIcon.icon, el.iconRight);
  });

  test('Setting iconRightSize sets the size of the right icon', async () => {
    el.iconRightSize = 30;
    const $rightIcon = elementShadowRoot.querySelector('.icon-right');
    await el.updateComplete;
    assert.strictEqual(parseInt(window.getComputedStyle($rightIcon).width, 10), el.iconRightSize);
  });

  test('Setting iconRight to an empty string hides the right icon', async () => {
    el.iconRight = '';
    const $rightIcon = elementShadowRoot.querySelector('.icon-right');
    await el.updateComplete;
    assert.isTrue($rightIcon.hidden);
  });

  test('Text in light DOM is shown', async () => {
    await el.updateComplete;
    assert.equal(el.innerText.trim(), 'Button text');
  });
  test('a11y', () => assert.isAccessible(el));

  test('SHADOW DOM - Structure test', () => {
    assert.shadowDom.equalSnapshot(el);
  });

  test('LIGHT DOM - Structure test', () => {
    assert.lightDom.equalSnapshot(el);
  });
});
