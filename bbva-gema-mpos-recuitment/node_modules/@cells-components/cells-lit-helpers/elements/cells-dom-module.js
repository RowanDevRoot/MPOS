/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { BbvaCoreDomModule } from '@bbva-web-components/bbva-core-lit-helpers/elements/bbva-core-dom-module.js';

/**
 * The `cells-dom-module` element registers the dom it contains to the name given
 * by the module's id attribute. It provides a unified database of dom
 * accessible via its static `import` API.
 *
 * A key use case of `cells-dom-module` is for providing custom element `<template>`s
 * via HTML imports that are parsed by the native HTML parser, that can be
 * relocated during a bundling pass and still looked up by `id`.
 *
 * Example:
 *
 *     <cells-dom-module id="foo">
 *       <img src="stuff.png">
 *     </cells-dom-module>
 *
 * Then in code in some other location that cannot access the cells-dom-module above
 *
 *     let img = customElements.get('cells-dom-module').import('foo', 'img');
 *
 * @customElement cells-dom-module
 * @extends HTMLElement
 * @summary Custom element that provides a registry of relocatable DOM content
 *   by `id` that is agnostic to bundling.
 * @unrestricted
 */
export class CellsDomModule extends BbvaCoreDomModule {}

if (!customElements.get('cells-dom-module')) {
  customElements.define('cells-dom-module', CellsDomModule);
}
